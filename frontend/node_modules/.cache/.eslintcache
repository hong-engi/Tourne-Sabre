[{"/Users/hong-eungi/git/tourne-sabre/frontend/src/index.js":"1","/Users/hong-eungi/git/tourne-sabre/frontend/src/App.js":"2","/Users/hong-eungi/git/tourne-sabre/frontend/src/reportWebVitals.js":"3","/Users/hong-eungi/git/tourne-sabre/frontend/src/mapdraw.js":"4","/Users/hong-eungi/git/tourne-sabre/frontend/src/object.js":"5","/Users/hong-eungi/git/tourne-sabre/frontend/src/canvas.js":"6","/Users/hong-eungi/git/tourne-sabre/frontend/src/map.js":"7","/Users/hong-eungi/git/tourne-sabre/frontend/src/frameUpdater.js":"8"},{"size":287,"mtime":1638519846456,"results":"9","hashOfConfig":"10"},{"size":1166,"mtime":1638521909991,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1638198561682,"results":"12","hashOfConfig":"10"},{"size":2597,"mtime":1638525641662,"results":"13","hashOfConfig":"10"},{"size":5313,"mtime":1638521542569,"results":"14","hashOfConfig":"10"},{"size":619,"mtime":1638523918100,"results":"15","hashOfConfig":"10"},{"size":2124,"mtime":1638524314901,"results":"16","hashOfConfig":"10"},{"size":725,"mtime":1638524865512,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1skrt0r",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"20"},"/Users/hong-eungi/git/tourne-sabre/frontend/src/index.js",[],["40","41"],"/Users/hong-eungi/git/tourne-sabre/frontend/src/App.js",["42"],"import './App.css';\nimport {Player} from './object.js'\nimport Canvas from './canvas.js'\nimport {map} from './map.js'\nimport React from 'react'\nimport useInterval from '@use-it/interval'\nimport frameUpdate from './frameUpdater.js'\n\nvar player = new Player(\"James\");\nmap.addPlayer(player);\nconst fps = 60;\n\nfunction App() {\n  var pressedKeys = {};\n\n  function handleKeyDown(event){\n    pressedKeys[event.key] = true;\n  } \n  function handleKeyUp(event){\n    delete pressedKeys[event.key]\n  } \n\n  React.useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup',handleKeyUp)\n    // cleanup this component\n    return () => {\n      console.log('removing keyboard')\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup',handleKeyUp)\n    };\n  }, []);\n\n  useInterval(()=>{frameUpdate(player,pressedKeys)},1000/fps)\n\n  return (\n    <body className = \"center\">\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Canvas id=\"gameboard\" width=\"1200\" height=\"1200\" player={player} />\n        </header>\n      </div>\n    </body>\n  );\n}\n\n\nexport default App;\n","/Users/hong-eungi/git/tourne-sabre/frontend/src/reportWebVitals.js",[],"/Users/hong-eungi/git/tourne-sabre/frontend/src/mapdraw.js",["43","44","45","46","47","48"],"import sword from './sword.png'\nimport {map} from './map.js'\nimport {Pos, Player, Item} from './object.js'\nconst canvas_size = 1200;\nconst center_h = canvas_size/2;\nconst center_w = canvas_size/2;\n\nvar img = new Image();\nimg.src = sword; \n\n//todo : canvas.width,canvas.height??\nfunction draw(ctx,player) {\n    ctx.StrokeStyle='black'\n    ctx.fillStyle='black'\n    ctx.fillRect(0,0,canvas_size,canvas_size);\n    defaultMap(ctx)\n\n    for(let i=0;i<map.itemList.length;i++){\n        let item = Item.schemaItem(map.itemList[i])\n        if(player.pos.dist(item.pos)<400-item.r){\n            drawItem(ctx,player,item)\n        }\n    }\n\n    for(let i=0;i<map.playerList.length;i++){\n        let player2 = Player.schemaPlayer(map.playerList[i])\n        if(player.pos.dist(player2.pos)<400-player2.r){\n            drawPlayer(ctx,player,player2)\n        }\n    }\n}\n\nfunction defaultMap(ctx){\n    var circle = new Path2D();\n    circle.arc(center_h, center_w, 400, 0, 2 * Math.PI);\n    ctx.fillStyle='white';\n    ctx.strokeStyle='gray';\n    ctx.lineWidth=5;\n    ctx.fill(circle);\n    ctx.stroke(circle);\n}\n\nfunction drawItem(ctx,me,i){\n    var circle = new Path2D();\n    let dpos = i.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    circle.arc(x, y, i.r, 0, 2 * Math.PI);\n    ctx.fillStyle=i.color;\n    ctx.strokeStyle='black';\n    ctx.lineWidth=0.5;\n    ctx.fill(circle);\n    ctx.stroke(circle);\n}\n\nfunction drawPlayer(ctx,me,p){\n    var circle = new Path2D();\n    let dpos = p.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    if(me.id == p.id){x=center_w;y=center_h;}\n    circle.arc(x, y, p.r, 0, 2 * Math.PI);\n    ctx.fillStyle=p.color;\n    if(me.id == p.id)ctx.fillStyle='red';\n    ctx.strokeStyle='black';\n    ctx.lineWidth=1;\n    ctx.fill(circle);\n    ctx.stroke(circle);\n    drawSword(ctx,me,p)\n    drawString(ctx,me,p,center_h,center_w)\n}\n\nfunction drawSword(ctx,me,p){\n    const angle = -p.sw_angle;\n    let dpos = p.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    if(me.id == p.id){x=center_w;y=center_h;}\n    const r = p.sw_r,w=p.sw_w,h=p.sw_h;\n    ctx.save();\n    ctx.translate(x,y);\n    ctx.rotate(angle);\n    ctx.drawImage(img,-w/2,-r-h/2,w,h);\n    ctx.restore();\n}\n\nfunction drawString(ctx,me,p){\n    let dpos = p.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    if(me.id == p.id){x=center_w;y=center_h;}\n    ctx.fillStyle='black';\n    if(me.id == p.id)ctx.fillStyle='white';\n    ctx.font = '15px Dosis-Bold';\n    let text = p.name\n    let width = ctx.measureText(text).width;\n    ctx.fillText(text,x-(width/2),y+5)\n}\n\nexport default draw;","/Users/hong-eungi/git/tourne-sabre/frontend/src/object.js",["49"],"var mapSize = 3000;\nfunction getRandomId(){\n    var letters = 'HONGENGIisworkingreallyhard'\n    var id = '';\n    for(let i=0;i<6;i++){\n        id += letters[Math.floor(Math.random()*letters.length)]\n    }\n    return id;\n}\n\nfunction getRandomColor() {\n    var letters = '6789ABCDEF';\n    var color = '#';\n    let i = Math.floor(Math.random()*3);\n    for(let j=0;j<3;j++){\n        if(j==i) color+='FF';\n        else for (var k = 0; k < 2; k++) {\n            color += letters[Math.floor(Math.random() * 10)];\n        }\n    }\n    return color;\n}\n\nclass Pos{\n    constructor(x,y){\n        this.x=x;\n        this.y=y;\n    }\n\n    static randomPos(){\n        let x = Math.random() * 2 * mapSize - mapSize;\n        let y = Math.random() * 2 * mapSize - mapSize;\n        return new Pos(x,y)\n    }\n\n    dist(v2){\n        return Math.pow((this.x-v2.x)*(this.x-v2.x)+(this.y-v2.y)*(this.y-v2.y),0.5)\n    }\n\n    move(dx,dy){\n        this.x+=dx;\n        this.y+=dy;\n    }\n\n    movev(v){\n        this.x+=v.x;\n        this.y+=v.y;\n    }\n    \n    add(x,y,i=1){\n        return new Pos(this.x+x*i, this.y+y*i)\n    }\n\n    addv(v,i=1){\n        return new Pos(this.x+v.x*i, this.y+v.y*i)\n    }\n\n    rot(center,angle,clockwise = true){ // center point, angle in radian\n        if(clockwise)angle*=-1;\n        const x = this.x - center.x\n        const y = this.y - center.y\n        this.x = Math.cos(angle)*x-Math.sin(angle)*y+center.x;\n        this.y = Math.sin(angle)*x+Math.cos(angle)*y+center.y;\n    }\n}\n\nclass Player{\n    constructor(name,x=0,y=0){\n        this.id = getRandomId();\n        this.name = name;\n        this.pos = new Pos(x,y);\n        this.r = 25;\n        this.sw_angle = 0 * (Math.PI/180); // sword angle\n        this.sw_r = 80; // sword radius\n        this.sw_w = 40;\n        this.sw_h = 100;\n        this.sw_speed = 4 * (Math.PI/180);\n        this.hp = 100;\n        this.xp = 0;\n     \n        this.color = getRandomColor();\n    }\n\n    static randomPlayer(){\n        function randomName(){\n            let alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n            let name = '';\n            for(let i=0;i<10;i++)\n                name+=alphabet[Math.floor(Math.random()*alphabet.length)]\n            return name;\n        }\n        let p = new Player(randomName())\n        p.pos = Pos.randomPos();\n        return p;\n    }\n\n    static schemaPlayer(sch){\n        let newPlayer = new Player()\n        newPlayer.id = sch._id\n        newPlayer.name = sch.name\n        newPlayer.pos = new Pos(sch.x,sch.y)\n        newPlayer.r = sch.r\n        newPlayer.sw_angle = sch.sw_angle\n        newPlayer.sw_r = sch.sw_r\n        newPlayer.sw_h = sch.sw_h\n        newPlayer.sw_speed = sch.sw_speed\n        newPlayer.hp = sch.hp\n        newPlayer.xp = sch.xp\n        newPlayer.color = sch.color\n        return newPlayer\n    }\n\n    trytohit(enemy){\n        let sp = this.sw_pos();\n        let w = this.sw_w;\n        let h = this.sw_h;\n        function pos_x_line_meet(p1,p2,p){\n            return (p.y-p1.y)*(p.x-p2.x)/(p1.y-p2.y)+p1.x>p.x &&\n                (p.y-p1.y)*(p.y-p2.y)<0;\n        }\n        function line_circle_meet(p1,p2,p,r){\n            let a=p2.y-p1.y,b=p1.x-p2.x,c=p1.x*(p1.y-p2.y)+p1.y*(p2.x-p1.x);\n            let d = Math.abs(a*p.x+b*p.y+c)/Math.pow(a*a+b*b,0.5)\n            return d<r;\n        }\n        let meet_cnt = 0;\n        let dir = [1,1];\n        for(let i=0;i<4;i++){\n            let p1 = new Pos(sp.x+w*dir[0],sp.y+h*dir[1]);\n            let p2 = new Pos(sp.x+w*dir[0],sp.y-h*dir[1]);\n            if(pos_x_line_meet(p1,p2,enemy.pos))meet_cnt++;\n            if(line_circle_meet(p1,p2,enemy.pos,enemy.r)){\n                meet_cnt=1;\n                break;\n            }\n            let tmp = dir[0];\n            dir[0]=-dir[1];\n            dir[1]=tmp;\n        }\n        return meet_cnt%2 === 1\n    }\n\n    trytoeat(item){\n        const p = this.pos;\n        const i = item.pos;\n        return Math.pow(i.x-p.x,2)+Math.pow(i.y-p.y,2)<=Math.pow(this.r+item.r,2)\n    }\n\n    move(dx,dy){\n        this.pos.move(dx,dy)\n        this.bound()\n    }\n\n    bound(){\n        if(this.pos.x>=mapSize)this.pos.x=mapSize;\n        if(this.pos.y>=mapSize)this.pos.y=mapSize;\n        if(this.pos.x<=-mapSize)this.pos.x=-mapSize;\n        if(this.pos.y<=-mapSize)this.pos.y=-mapSize;\n    }\n\n    sw_rot(angle,clockwise=true){\n        if(clockwise)angle*=-1;\n        this.sw_angle+=angle;\n        this.sw_angle%=(2*Math.PI);\n    }\n\n    sw_pos(){\n        return this.pos.add(this.sw_r,0).rot(this.pos,this.sw_angle);\n    }\n\n    hp_change(dhp){\n        this.hp+=dhp;\n    }\n\n    dead(){\n        return (this.hp <= 0)\n    }\n}\n\n\n\nclass Item{\n    constructor(pos){\n        this.id = getRandomId();\n        this.pos = pos; \n        this.color = getRandomColor();\n        this.xp = Math.floor(Math.random() * 16)+1;\n        this.r = Math.floor(Math.random() * 3)+3;\n    }\n\n    static schemaItem(sch){\n        let newItem = new Item()\n        newItem.id = sch._id\n        newItem.pos = new Pos(sch.x,sch.y)\n        newItem.color = sch.color\n        newItem.xp = sch.xp\n        newItem.r = sch.r\n        return newItem\n    }\n\n    static randomItem(){\n        return new Item(Pos.randomPos())\n    }\n\n    eaten(player){\n        player.xp+=this.xp;\n        this.constructor(Pos.randomPos())\n    }\n}\n\nexport {Player, Pos, Item}","/Users/hong-eungi/git/tourne-sabre/frontend/src/canvas.js",["50","51"],"import React, { useRef, useEffect } from 'react'\nimport draw from './mapdraw.js'\n\nconst Canvas = props => {\n\n  const canvasRef = useRef(null)\n\n  useEffect(() => {\n  \n    const canvas = canvasRef.current\n    const ctx = canvas.getContext('2d')\n    let frameCount = 0\n    let animationFrameId\n    \n    const render = () => {\n      frameCount++;\n      draw(ctx, props.player)\n      animationFrameId = window.requestAnimationFrame(render)\n    }\n\n    render()\n\n    return () => {\n      window.cancelAnimationFrame(animationFrameId)\n    }\n  }, [draw])\n  \n  return <canvas ref={canvasRef} {...props}/>\n}\n\nexport default Canvas","/Users/hong-eungi/git/tourne-sabre/frontend/src/map.js",[],"/Users/hong-eungi/git/tourne-sabre/frontend/src/frameUpdater.js",["52"],"import {Player,Item} from './object.js'\nimport {map} from './map.js'\nvar flag = true\nvar delflag = true\nfunction frameUpdate(player,pKeys){\n  if(pKeys['w'])player.move(0,-3);\n  if(pKeys['s'])player.move(0,3);\n  if(pKeys['a'])player.move(-3,0);\n  if(pKeys['d'])player.move(3,0);\n  console.log(player.pos.x,player.pos.y)\n  map.playerUpdate(player)\n  map.getItems()\n  map.getPlayers()\n  if(pKeys['.'] && flag){\n    var p = new Player('Jane Doe',100,100)\n    flag = false\n    map.addPlayer(p)\n  }\n  if(pKeys[',']){\n    map.addItem()\n    console.log('addItem')\n  }\n  if(pKeys['q'] && delflag){\n    map.deleteAll()\n    console.log('deleteall')\n    delflag = false\n  }\n  player.sw_rot(1*(2*Math.PI/180))\n}\nexport default frameUpdate",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":32,"column":6,"nodeType":"59","endLine":32,"endColumn":8,"suggestions":"60"},{"ruleId":"61","severity":1,"message":"62","line":3,"column":9,"nodeType":"63","messageId":"64","endLine":3,"endColumn":12},{"ruleId":"65","severity":1,"message":"66","line":57,"column":14,"nodeType":"67","messageId":"68","endLine":57,"endColumn":16},{"ruleId":"65","severity":1,"message":"66","line":60,"column":14,"nodeType":"67","messageId":"68","endLine":60,"endColumn":16},{"ruleId":"65","severity":1,"message":"66","line":72,"column":14,"nodeType":"67","messageId":"68","endLine":72,"endColumn":16},{"ruleId":"65","severity":1,"message":"66","line":83,"column":14,"nodeType":"67","messageId":"68","endLine":83,"endColumn":16},{"ruleId":"65","severity":1,"message":"66","line":85,"column":14,"nodeType":"67","messageId":"68","endLine":85,"endColumn":16},{"ruleId":"65","severity":1,"message":"66","line":16,"column":13,"nodeType":"67","messageId":"68","endLine":16,"endColumn":15},{"ruleId":"61","severity":1,"message":"69","line":12,"column":9,"nodeType":"63","messageId":"64","endLine":12,"endColumn":19},{"ruleId":"57","severity":1,"message":"70","line":26,"column":6,"nodeType":"59","endLine":26,"endColumn":12,"suggestions":"71"},{"ruleId":"61","severity":1,"message":"72","line":1,"column":16,"nodeType":"63","messageId":"64","endLine":1,"endColumn":20},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'handleKeyDown' and 'handleKeyUp'. Either include them or remove the dependency array.","ArrayExpression",["75"],"no-unused-vars","'Pos' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'frameCount' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.player'. Either include it or remove the dependency array. Outer scope values like 'draw' aren't valid dependencies because mutating them doesn't re-render the component.",["76"],"'Item' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},{"desc":"79","fix":"80"},"Update the dependencies array to be: [handleKeyDown, handleKeyUp]",{"range":"81","text":"82"},"Update the dependencies array to be: [props.player]",{"range":"83","text":"84"},[835,837],"[handleKeyDown, handleKeyUp]",[538,544],"[props.player]"]