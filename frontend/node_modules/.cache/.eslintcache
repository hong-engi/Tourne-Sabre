[{"/Users/hong-eungi/git/tourne-sabre/frontend/src/index.js":"1","/Users/hong-eungi/git/tourne-sabre/frontend/src/App.js":"2","/Users/hong-eungi/git/tourne-sabre/frontend/src/reportWebVitals.js":"3","/Users/hong-eungi/git/tourne-sabre/frontend/src/mapdraw.js":"4","/Users/hong-eungi/git/tourne-sabre/frontend/src/object.js":"5","/Users/hong-eungi/git/tourne-sabre/frontend/src/canvas.js":"6","/Users/hong-eungi/git/tourne-sabre/frontend/src/map.js":"7","/Users/hong-eungi/git/tourne-sabre/frontend/src/frameUpdater.js":"8","/Users/hong-eungi/git/tourne-sabre/frontend/src/textbox.js":"9"},{"size":287,"mtime":1638625922136,"results":"10","hashOfConfig":"11"},{"size":539,"mtime":1638712502375,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1638625922137,"results":"13","hashOfConfig":"11"},{"size":4649,"mtime":1638625922136,"results":"14","hashOfConfig":"11"},{"size":6896,"mtime":1638625922137,"results":"15","hashOfConfig":"11"},{"size":1897,"mtime":1638712653418,"results":"16","hashOfConfig":"11"},{"size":2557,"mtime":1638713169756,"results":"17","hashOfConfig":"11"},{"size":1272,"mtime":1638713353109,"results":"18","hashOfConfig":"11"},{"size":1737,"mtime":1638712240272,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1skrt0r",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/hong-eungi/git/tourne-sabre/frontend/src/index.js",[],["45","46"],"/Users/hong-eungi/git/tourne-sabre/frontend/src/App.js",["47","48"],"import './App.css';\nimport Canvas from './canvas.js'\nimport React,{useEffect} from 'react'\nimport {map} from './map.js'\nimport {Textbox} from './textbox.js'\n//map.deleteAll()\n\nfunction App() {\n\n  const myRef = React.useRef({})\n\n  return (\n    <body className = \"center\">\n      <div className = \"above\" id = 'entername'>\n        <Textbox myRef = {myRef}/>\n      </div>\n      <header className=\"App-header\">\n        <Canvas myRef = {myRef} id=\"gameboard\" width=\"1000\" height=\"1000\"/>\n      </header>\n    </body>\n  );\n}\n\n\nexport default App;\n","/Users/hong-eungi/git/tourne-sabre/frontend/src/reportWebVitals.js",[],"/Users/hong-eungi/git/tourne-sabre/frontend/src/mapdraw.js",["49","50","51","52","53"],"import sword from './sword.png'\nimport {map} from './map.js'\nimport {Pos, Player, Item} from './object.js'\nconst canvas_size = 1000;\nconst center_h = canvas_size/2;\nconst center_w = canvas_size/2;\n\nvar img = new Image();\nimg.src = sword; \n\n//todo : canvas.width,canvas.height??\nfunction draw(ctx,me) {\n\n    let playerList = []\n    ctx.fillStyle='white'\n    ctx.fillRect(0,0,canvas_size,canvas_size);\n    if(me!=null){\n        for(let i=0;i<map.itemList.length;i++){\n            let item = Item.schemaItem(map.itemList[i])\n            if(me.pos.dist(item.pos)<550){\n                drawItem(ctx,me,item)\n            }\n        }\n\n        for(let i=0;i<map.playerList.length;i++){\n            let player = Player.schemaPlayer(map.playerList[i])\n            if(me.pos.dist(player.pos)<550){\n                playerList.push(player)\n            }\n        }\n        for(let i=0;i<playerList.length;i++){   \n            if(me.id == playerList[i].id) {me=playerList[i]}\n            drawPlayer(ctx,me,playerList[i])\n            drawSword(ctx,me,playerList[i])\n        }\n\n        /*\n        ctx.fillStyle = 'purple'\n        let sp = me.sw_pos()\n        var circle = new Path2D();\n        circle.arc(center_w+sp.x-me.pos.x, center_h+sp.y-me.pos.y, 3, 0, 2 * Math.PI);\n        circle.arc(center_w-me.pos.x, center_h-me.pos.y, 3, 0, 2 * Math.PI);\n        ctx.fill(circle);\n        */\n        /*\n        let w = me.sw_w/2;\n        let h = me.sw_h/2;\n        let alpha = Math.atan(w/h)\n        let beta = me.sw_angle-alpha\n        let r = Math.pow(w*w+h*h,0.5)\n        var dir = [new Pos(0,-r).rot(new Pos(0,0),beta),\n            new Pos(0,-r).rot(new Pos(0,0),beta+2*alpha)]\n        for(let i=0;i<4;i++){\n            let xx = new Path2D();\n            let p1 = sp.addv(dir[0]);\n            ctx.fillStyle = 'blue'\n            xx.arc(center_w+p1.x-me.pos.x, center_h+p1.y-me.pos.y, 3, 0, 2 * Math.PI);\n            ctx.fill(xx);\n            let tmp = dir[0];\n            dir[0] = new Pos(0,0).addv(dir[1],-1);\n            dir[1] = tmp;\n        }\n        */\n    }\n    defaultMap(ctx)\n\n    if(me!=null){\n        ctx.font = '20px Dosis-Bold';\n        ctx.fillStyle = 'green'\n        let text = '('+String(Math.round(me.pos.x))+','+String(Math.round(me.pos.y))+')'\n        ctx.fillText(text,100,200)\n    }\n}\n\nfunction defaultMap(ctx){\n    ctx.StrokeStyle='black'\n    ctx.fillStyle='black'\n    ctx.beginPath()\n    ctx.moveTo(0, 0);\n    ctx.lineTo(canvas_size, 0);\n    ctx.lineTo(canvas_size,canvas_size);\n    ctx.lineTo(0, canvas_size);\n    ctx.lineTo(0,0);\n    ctx.closePath();\n    ctx.arc(center_w,center_h,400,0,Math.PI*2,true);\n    ctx.closePath();\n    ctx.fill();\n}\n\nfunction drawItem(ctx,me,i){\n    var circle = new Path2D();\n    let dpos = i.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    circle.arc(x, y, i.r, 0, 2 * Math.PI);\n    ctx.fillStyle=i.color;\n    ctx.strokeStyle='black';\n    ctx.lineWidth=0.5;\n    ctx.fill(circle);\n    ctx.stroke(circle);\n}\n\nfunction drawPlayer(ctx,me,p){\n    if(me.id == p.id){p=me}\n    var circle = new Path2D();\n    let dpos = p.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    circle.arc(x, y, p.r, 0, 2 * Math.PI);\n    ctx.fillStyle=p.color;\n    if(me.id == p.id)ctx.fillStyle='red';\n    ctx.strokeStyle='black';\n    ctx.lineWidth=1;\n    ctx.fill(circle);\n    ctx.stroke(circle);\n    drawSword(ctx,me,p)\n    drawString(ctx,me,p)\n    drawHealthbar(ctx,me,p)\n}\n\nfunction drawHealthbar(ctx,me,p){\n    let dpos = p.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    ctx.strokeStyle = '#77FF77'\n    ctx.fillStyle = '#77FF77'\n    ctx.lineWidth=2;\n    ctx.fillRect(x-p.r,y+p.r+3,2*p.r*p.hp/p.hpmax,10)\n    ctx.strokeStyle = '#77FF77'\n    ctx.fillStyle = \"rgba(0, 0, 0, 0.2)\";\n    ctx.fillRect(x-p.r,y+p.r+3,2*p.r,10)\n}\n\nfunction drawSword(ctx,me,p){\n    const angle = -p.sw_angle;\n    let dpos = p.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    const r = p.r+p.sw_r,w=p.sw_w,h=p.sw_h;\n    ctx.save();\n        ctx.translate(x,y);\n        ctx.rotate(angle);\n        ctx.drawImage(img,-w/2,-r-h/2,w,h);\n    ctx.restore();\n}\n\nfunction drawString(ctx,me,p){\n    let dpos = p.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    ctx.fillStyle='black';\n    if(me.id == p.id)ctx.fillStyle='white';\n    ctx.font = String(p.r*15/25)+'px Dosis-Bold';\n    let text = p.name\n    let width = ctx.measureText(text).width;\n    ctx.fillText(text,x-(width/2),y+(p.r*5/25))\n\n    ctx.font = String(Math.max(10,p.r*10/25))+'px Dosis-ExtraBold';\n    text = String(p.lv)+' lv'\n    width = ctx.measureText(text).width;\n    ctx.fillText(text,x-(width/2),y+(p.r*18/25))\n\n}\n\nexport default draw;","/Users/hong-eungi/git/tourne-sabre/frontend/src/object.js",["54","55"],"var mapSize = 3000;\nfunction getRandomId(){\n    var letters = 'HONGENGIisworkingreallyhard'\n    var id = '';\n    for(let i=0;i<6;i++){\n        id += letters[Math.floor(Math.random()*letters.length)]\n    }\n    return id;\n}\n\nfunction getRandomColor() {\n    var letters = '6789ABCDEF';\n    var color = '#';\n    let i = Math.floor(Math.random()*3);\n    for(let j=0;j<3;j++){\n        if(j==i) color+='FF';\n        else for (var k = 0; k < 2; k++) {\n            color += letters[Math.floor(Math.random() * 10)];\n        }\n    }\n    return color;\n}\n\nclass Pos{\n    constructor(x,y){\n        this.x=x;\n        this.y=y;\n    }\n\n    static randomPos(){\n        let x = Math.random() * 2 * mapSize - mapSize;\n        let y = Math.random() * 2 * mapSize - mapSize;\n        return new Pos(x,y)\n    }\n\n    dist(v2){\n        return Math.pow((this.x-v2.x)*(this.x-v2.x)+(this.y-v2.y)*(this.y-v2.y),0.5)\n    }\n\n    move(dx,dy){\n        this.x+=dx;\n        this.y+=dy;\n    }\n\n    movev(v){\n        this.x+=v.x;\n        this.y+=v.y;\n    }\n    \n    add(x,y,i=1){\n        return new Pos(this.x+x*i, this.y+y*i)\n    }\n\n    addv(v,i=1){\n        return new Pos(this.x+v.x*i, this.y+v.y*i)\n    }\n\n    rot(center,angle,clockwise = true){ // center point, angle in radian\n        if(clockwise)angle*=-1;\n        const x = this.x - center.x\n        const y = this.y - center.y\n        return new Pos(Math.cos(angle)*x-Math.sin(angle)*y+center.x,Math.sin(angle)*x+Math.cos(angle)*y+center.y)\n    }\n}\n\nclass Player{\n    constructor(name,x=0,y=0){\n        this.id = getRandomId();\n        this.name = name;\n        this.pos = new Pos(x,y);\n        this.r = 25;\n        this.speed = new Pos(0,0);\n        this.sw_angle = 0 * (Math.PI/180); // sword angle\n        this.sw_r = 65; // sword radius\n        this.sw_w = 40;\n        this.sw_h = 100;\n        this.sw_speed = 4 * (Math.PI/180);\n        this.hp = 100;\n        this.xp = 0;\n        this.lv = 1;\n        this.hpmax = 100;\n     \n        this.color = getRandomColor();\n    }\n\n    static randomPlayer(){\n        function randomName(){\n            let alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n            let name = '';\n            for(let i=0;i<10;i++)\n                name+=alphabet[Math.floor(Math.random()*alphabet.length)]\n            return name;\n        }\n        let p = new Player(randomName())\n        p.pos = Pos.randomPos();\n        return p;\n    }\n\n    static schemaPlayer(sch){\n        let newPlayer = new Player()\n        newPlayer.id = sch._id\n        newPlayer.name = sch.name\n        newPlayer.pos = new Pos(sch.x,sch.y)\n        newPlayer.speed = new Pos(sch.vx,sch.vy)\n        newPlayer.r = sch.r\n        newPlayer.sw_angle = sch.sw_angle\n        newPlayer.sw_r = sch.sw_r\n        newPlayer.sw_h = sch.sw_h\n        newPlayer.sw_speed = sch.sw_speed\n        newPlayer.hp = sch.hp\n        newPlayer.hpmax = sch.hpmax\n        newPlayer.xp = sch.xp\n        newPlayer.lv = sch.lv\n        newPlayer.color = sch.color\n        return newPlayer\n    }\n\n    addSpeed(x,y){\n        this.speed.move(x,y)\n    }\n\n    trytohit(enemy){\n        if(enemy.id == this.id)return;\n        let sp = this.sw_pos();\n        function pos_x_line_meet(p1,p2,p){\n            return ((p.y-p1.y)*(p.x-p2.x)/(p1.y-p2.y)+p1.x>p.x) &&\n                ((p.y-p1.y)*(p.y-p2.y)<0);\n        }\n        function dist(p1,p){\n            return Math.pow(Math.pow(p1.x-p.x,2)+Math.pow(p1.y-p.y,2),0.5)\n        }\n        function point_circle_meet(p1,p,r){\n            return dist(p1,p)<r\n        }\n        function angleof3p(pr,p,pl){\n            let prp = dist(pr,p)\n            let plp = dist(pl,p)\n            let prl = dist(pr,pl)\n            return Math.acos((prp*prp+plp*plp+prl*prl)/(2*prp*plp))\n        }\n        function line_circle_meet(p1,p2,p,r){\n            let a=p2.y-p1.y,b=p1.x-p2.x,c=p1.x*(p1.y-p2.y)+p1.y*(p2.x-p1.x);\n            let d = Math.abs(a*p.x+b*p.y+c)/Math.pow(a*a+b*b,0.5)\n            if(d<r){\n                return angleof3p(p,p1,p2)<Math.PI/2 && angleof3p(p,p2,p1)<Math.PI/2\n            }\n        }\n        let meet_cnt = 0;\n        let w = this.sw_w/2;\n        let h = this.sw_h/2;\n        let alpha = Math.atan(w/h)\n        let beta = this.sw_angle-alpha\n        let r = Math.pow(w*w+h*h,0.5)\n        var dir = [new Pos(0,-r).rot(new Pos(0,0),beta),\n            new Pos(0,-r).rot(new Pos(0,0),beta+2*alpha)]\n        for(let i=0;i<4;i++){\n            let p1 = sp.addv(dir[0]);\n            let p2 = sp.addv(dir[1]);\n            if(pos_x_line_meet(p1,p2,enemy.pos)){\n                meet_cnt++;\n            }\n            if(point_circle_meet(p1,enemy.pos,enemy.r) || \n                line_circle_meet(p1,p2,enemy.pos,enemy.r)){\n                meet_cnt=1;\n                break;\n            }\n            let tmp = dir[0];\n            dir[0] = new Pos(0,0).addv(dir[1],-1);\n            dir[1]=tmp;\n        }\n        return meet_cnt%2 === 1\n    }\n\n    trytoeat(item){\n        const p = this.pos;\n        const i = item.pos;\n        return Math.pow(i.x-p.x,2)+Math.pow(i.y-p.y,2)<=Math.pow(this.r+item.r,2)\n    }\n\n    accel(){\n        this.speed.move(-this.speed.x/15,-this.speed.y/15)\n    }\n\n    move(dx,dy){\n        this.pos.movev(this.speed)\n        this.accel()\n        this.bound()\n    }\n\n    bound(){\n        if(this.pos.x>=mapSize)this.pos.x=mapSize+(this.pos.x-mapSize)/1.3;\n        if(this.pos.y>=mapSize)this.pos.y=mapSize+(this.pos.y-mapSize)/1.3;\n        if(this.pos.x<=-mapSize)this.pos.x=-mapSize+(this.pos.x+mapSize)/1.3;\n        if(this.pos.y<=-mapSize)this.pos.y=-mapSize+(this.pos.y+mapSize)/1.3;\n    }\n\n    sw_rot(angle,clockwise=true){\n        if(clockwise)angle*=-1;\n        this.sw_angle+=angle;\n        this.sw_angle%=(2*Math.PI);\n    }\n\n    sw_pos(){\n        let p = this.pos.add(0,-this.r-this.sw_r)\n        return p.rot(this.pos,this.sw_angle);\n    }\n\n    damage(dhp){\n        this.hp=Math.max(0,this.hp-dhp)\n    }\n\n    dead(){\n        return (this.hp <= 0)\n    }\n\n    xpup(xp){\n        this.xp+=xp;\n        this.r = Math.pow(25*25+this.xp,0.5)\n        if(Math.pow(this.xp/50,0.5)>this.lv)this.lvup()\n    }\n\n    lvup(){\n        this.lv+=1\n        this.hpmax+=25\n        this.hp+=25\n    }\n}\n\n\n\nclass Item{\n    constructor(pos){\n        this.init(pos)\n        this.id = getRandomId();\n    }\n\n    init(pos){\n        this.pos = pos; \n        this.color = getRandomColor();\n        this.xp = Math.floor(Math.random() * 16)+1;\n        this.r = Math.floor(Math.random() * 10)+3;\n    }\n\n    static schemaItem(sch){\n        let newItem = new Item()\n        newItem.id = sch._id\n        newItem.pos = new Pos(sch.x,sch.y)\n        newItem.color = sch.color\n        newItem.xp = sch.xp\n        newItem.r = sch.r\n        return newItem\n    }\n\n    static randomItem(){\n        return new Item(Pos.randomPos())\n    }\n\n    eaten(player){\n        player.xpup(this.xp)\n        this.init(Pos.randomPos())\n    }\n}\n\nexport {Player, Pos, Item}","/Users/hong-eungi/git/tourne-sabre/frontend/src/canvas.js",["56","57","58","59"],"import { useRef, useEffect } from 'react'\nimport {Player} from './object.js'\nimport draw from './mapdraw.js'\nimport {map} from './map.js'\nimport useInterval from '@use-it/interval'\nimport frameUpdate from './frameUpdater.js'\nimport socketIOClient from \"socket.io-client\";\n\nconst socket = socketIOClient(\"http://localhost:8081\", {  \n  cors: {\n  origin: \"http://localhost:8081\",\n  credentials: true},\n  transports : ['websocket']} \n);\n\nsocket.on(\"connect\", () => {\n  console.log('socket id', socket.id); // x8WIv7-mJelg7on_ALbx\n});\n\nvar player = null\nconst makePlayer = (name) => {\n  player = new Player(name);\n  map.addPlayer(player);\n  socket.emit(\"newplayer\",player.id)\n}\n\nvar cnt = 0\nfunction death(myRef){\n  player=null\n  myRef.current.appearThis()\n}\n\nconst Canvas = props => {\n  const canvasRef = useRef(null)\n  const fps = 30;\n  var pressedKeys = {};\n\n  function handleKeyDown(event){\n    pressedKeys[event.key] = true;\n  } \n  function handleKeyUp(event){\n    delete pressedKeys[event.key]\n  } \n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup',handleKeyUp)\n    return () => {\n      console.log('removing keyboard')\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup',handleKeyUp)\n    };\n  }, []);\n\n  useInterval(()=>{if(player)frameUpdate(player,pressedKeys,props.myRef);},1000/fps)\n\n  useEffect(() => {\n  \n    const canvas = canvasRef.current\n    const ctx = canvas.getContext('2d')\n    let frameCount = 0\n    let animationFrameId\n    \n    const render = () => {\n      frameCount++;\n      draw(ctx, player)\n      animationFrameId = window.requestAnimationFrame(render)\n    }\n\n    render()\n\n    return () => {\n      window.cancelAnimationFrame(animationFrameId)\n    }\n  }, [draw])\n  \n  return <canvas ref={canvasRef} {...props}/>\n}\n\nexport default Canvas\nexport {makePlayer,death}","/Users/hong-eungi/git/tourne-sabre/frontend/src/map.js",["60"],"import axios from \"axios\";\nimport {Item} from \"./object.js\"\n\nconst sitetxt = 'https://localhost:8080/'\n\nclass mapConstructor{\n    constructor(){\n        this.itemList=[];\n        this.playerList=[];\n    }\n\n    test(){\n        axios.post('api/map/test')\n        console.log('test success')\n    }\n\n    deleteAll(){\n        axios.delete('api/map/all')\n        console.log('deleted All')\n    }\n\n    getItems(){\n        axios.get(`/api/map/item`)\n        .then(response => {\n            this.itemList = response.data;\n        })\n    }\n    getPlayers(){\n        axios.get(`/api/map/player`)\n        .then(response => {\n            this.playerList = response.data;\n        })\n    }\n\n    kill(player){\n        axios.delete(`/api/map/player/${player.id}/kill`)\n            .then(() => axios.get('/api/map/player'))\n            .then(response => {\n                this.playerList = response.data;\n        });\n    };\n\n    addPlayer(player){\n        axios.post(`/api/map/player/add`,player)\n            .then(() => axios.get('/api/map/player'))\n            .then(response => {\n                this.playerList = response.data;\n        });\n    };\n\n    deletePlayer(player){\n        axios.post(`/api/map/${player.id}/delete`)\n            .then(() => axios.get('/api/map/player'))\n            .then(response => {\n                this.playerList = response.data;\n        });\n    };\n\n    addItem(num = 5){\n        for(let i=0;i<num;i++){\n            let item = Item.randomItem()\n            axios.post(`/api/map/item/add`,item)\n            .then(() => axios.get('/api/map/item'))\n            .then(response => {\n                this.itemList = response.data;\n            });\n        }\n    }\n\n    damage(player,dmg){\n        axios.put(`/api/map/player/${player.id}/damage`,{dmg:dmg})\n            .then(() => axios.get('/api/map/player'))\n            .then(response => {\n                this.playerList = response.data;\n        });\n    }\n\n    playerUpdate(player){\n        axios.post(`/api/map/player/update`,player)\n        .then(() => axios.get('/api/map/player'))\n        .then(response => {\n            this.playerList = response.data;\n        });\n    }\n\n    playerUpdateBack(player){\n        axios.get(`/api/map/player/${player.id}`)\n        .then((found) => {if(found && player)player.hp = found.data.hp})\n    }\n\n    ate(item){\n        axios.post(`/api/map/item/ate`,item)\n            .then(() => axios.get('/api/map/item'))\n            .then(response => {\n                this.itemList = response.data;\n        });\n    };\n};\n\nvar map = new mapConstructor()\n\nexport {map}","/Users/hong-eungi/git/tourne-sabre/frontend/src/frameUpdater.js",["61","62"],"import {Player,Item} from './object.js'\nimport {map} from './map.js'\nimport {death} from './canvas.js'\n\nvar ateItemid = null\nvar killedPlayerid = null\nvar delflag = true\nfunction frameUpdate(me,pKeys,myRef){\n  if(me==null)return\n  if(me.dead()){map.kill(me);death(myRef);return}\n  if(pKeys['w'])me.addSpeed(0,-1);\n  if(pKeys['s'])me.addSpeed(0,1);\n  if(pKeys['a'])me.addSpeed(-1,0);\n  if(pKeys['d'])me.addSpeed(1,0);\n  me.move();\n  me.sw_rot(6*(Math.PI/180))\n  map.getItems()\n  map.getPlayers()\n  map.playerUpdateBack(me)\n  map.playerUpdate(me)\n\n  for(let i=0;i<map.itemList.length;i++){\n    let item = Item.schemaItem(map.itemList[i])\n    if(me.trytoeat(item)&&ateItemid != item.id){\n      ateItemid = item.id\n      item.eaten(me)\n      map.ate(item)\n    }\n  }\n\n  for(let i=0;i<map.playerList.length;i++){\n    let player = Player.schemaPlayer(map.playerList[i])\n    if(me.trytohit(player)){\n      let dmg = me.lv+5\n      //todo : 이거 옮기기\n      map.damage(player,dmg)\n      if(player.dead() && killedPlayerid != player.id){\n        killedPlayerid = player.id\n        me.xpup(50)\n      }\n    }\n  }\n  if(pKeys['q']&&pKeys['w']&&pKeys['e']&&pKeys['r'] && delflag){\n    map.deleteAll()\n    console.log('deleteall')\n    delflag = false\n  }\n}\nexport default frameUpdate","/Users/hong-eungi/git/tourne-sabre/frontend/src/textbox.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":3,"column":15,"nodeType":"69","messageId":"70","endLine":3,"endColumn":24},{"ruleId":"67","severity":1,"message":"71","line":4,"column":9,"nodeType":"69","messageId":"70","endLine":4,"endColumn":12},{"ruleId":"67","severity":1,"message":"72","line":3,"column":9,"nodeType":"69","messageId":"70","endLine":3,"endColumn":12},{"ruleId":"73","severity":1,"message":"74","line":32,"column":22,"nodeType":"75","messageId":"76","endLine":32,"endColumn":24},{"ruleId":"73","severity":1,"message":"74","line":102,"column":14,"nodeType":"75","messageId":"76","endLine":102,"endColumn":16},{"ruleId":"73","severity":1,"message":"74","line":107,"column":14,"nodeType":"75","messageId":"76","endLine":107,"endColumn":16},{"ruleId":"73","severity":1,"message":"74","line":142,"column":14,"nodeType":"75","messageId":"76","endLine":142,"endColumn":16},{"ruleId":"73","severity":1,"message":"74","line":16,"column":13,"nodeType":"75","messageId":"76","endLine":16,"endColumn":15},{"ruleId":"73","severity":1,"message":"74","line":123,"column":21,"nodeType":"75","messageId":"76","endLine":123,"endColumn":23},{"ruleId":"67","severity":1,"message":"77","line":27,"column":5,"nodeType":"69","messageId":"70","endLine":27,"endColumn":8},{"ruleId":"78","severity":1,"message":"79","line":53,"column":6,"nodeType":"80","endLine":53,"endColumn":8,"suggestions":"81"},{"ruleId":"67","severity":1,"message":"82","line":61,"column":9,"nodeType":"69","messageId":"70","endLine":61,"endColumn":19},{"ruleId":"78","severity":1,"message":"83","line":75,"column":6,"nodeType":"80","endLine":75,"endColumn":12,"suggestions":"84"},{"ruleId":"67","severity":1,"message":"85","line":4,"column":7,"nodeType":"69","messageId":"70","endLine":4,"endColumn":14},{"ruleId":"73","severity":1,"message":"86","line":24,"column":37,"nodeType":"75","messageId":"76","endLine":24,"endColumn":39},{"ruleId":"73","severity":1,"message":"86","line":37,"column":42,"nodeType":"75","messageId":"76","endLine":37,"endColumn":44},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'map' is defined but never used.","'Pos' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'cnt' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handleKeyDown' and 'handleKeyUp'. Either include them or remove the dependency array.","ArrayExpression",["89"],"'frameCount' is assigned a value but never used.","React Hook useEffect has an unnecessary dependency: 'draw'. Either exclude it or remove the dependency array. Outer scope values like 'draw' aren't valid dependencies because mutating them doesn't re-render the component.",["90"],"'sitetxt' is assigned a value but never used.","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},"Update the dependencies array to be: [handleKeyDown, handleKeyUp]",{"range":"95","text":"96"},"Update the dependencies array to be: []",{"range":"97","text":"98"},[1309,1311],"[handleKeyDown, handleKeyUp]",[1790,1796],"[]"]