{"ast":null,"code":"var mapSize = 3000;\n\nfunction getRandomId() {\n  var letters = 'HONGENGIisworkingreallyhard';\n  var id = '';\n\n  for (let i = 0; i < 6; i++) {\n    id += letters[Math.floor(Math.random() * letters.length)];\n  }\n\n  return id;\n}\n\nfunction getRandomColor() {\n  var letters = '6789ABCDEF';\n  var color = '#';\n  let i = Math.floor(Math.random() * 3);\n\n  for (let j = 0; j < 3; j++) {\n    if (j == i) color += 'FF';else for (var k = 0; k < 2; k++) {\n      color += letters[Math.floor(Math.random() * 10)];\n    }\n  }\n\n  return color;\n}\n\nclass Pos {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  static randomPos() {\n    let x = Math.random() * 2 * mapSize - mapSize;\n    let y = Math.random() * 2 * mapSize - mapSize;\n    return new Pos(x, y);\n  }\n\n  dist(v1, v2) {\n    return Math.pow((v1.x - v2.x) * (v1.x - v2.x) + (v1.y - v2.y) * (v1.y - v2.y), 0.5);\n  }\n\n  move(dx, dy) {\n    this.x += dx;\n    this.y += dy;\n  }\n\n  movev(v) {\n    this.x += v.x;\n    this.y += v.y;\n  }\n\n  add(x, y) {\n    let i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    return new Pos(this.x + x * i, this.y + y * i);\n  }\n\n  addv(v) {\n    let i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    return new Pos(this.x + v.x * i, this.y + v.y * i);\n  }\n\n  rot(center, angle) {\n    let clockwise = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    // center point, angle in radian\n    if (clockwise) angle *= -1;\n    const x = this.x - center.x;\n    const y = this.y - center.y;\n    this.x = Math.cos(angle) * x - Math.sin(angle) * y + center.x;\n    this.y = Math.sin(angle) * x + Math.cos(angle) * y + center.y;\n  }\n\n}\n\nclass Player {\n  constructor(name) {\n    this.id = getRandomId();\n    this.name = name;\n    this.pos = new Pos(0, 0);\n    this.r = 25;\n    this.sw_angle = 0 * (Math.PI / 180); // sword angle\n\n    this.sw_r = 80; // sword radius\n\n    this.sw_w = 40;\n    this.sw_h = 100;\n    this.sw_speed = 4 * (Math.PI / 180);\n    this.hp = 100;\n    this.xp = 0;\n    this.color = getRandomColor();\n  }\n\n  static randomPlayer() {\n    function randomName() {\n      let alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n      let name = '';\n\n      for (let i = 0; i < 10; i++) name += alphabet[Math.floor(Math.random() * alphabet.length)];\n\n      return name;\n    }\n\n    let p = new Player(randomName());\n    p.pos = Pos.randomPos();\n    return p;\n  }\n\n  static schemaPlayer(sch) {\n    console.log('schema', sch.r);\n    let newPlayer = new Player();\n    newPlayer.id = sch._id;\n    newPlayer.name = sch.name;\n    newPlayer.pos = new Pos(sch.pos.x, sch.pos.y);\n    newPlayer.r = sch.r;\n    newPlayer.sw_angle = sch.sw_angle;\n    newPlayer.sw_r = sch.sw_r;\n    newPlayer.sw_h = sch.sw_h;\n    newPlayer.sw_speed = sch.sw_speed;\n    newPlayer.hp = sch.hp;\n    newPlayer.xp = sch.xp;\n    newPlayer.color = sch.color;\n    return newPlayer;\n  }\n\n  trytohit(enemy) {\n    let sp = this.sw_pos();\n    let w = this.sw_w;\n    let h = this.sw_h;\n\n    function pos_x_line_meet(p1, p2, p) {\n      return (p.y - p1.y) * (p.x - p2.x) / (p1.y - p2.y) + p1.x > p.x && (p.y - p1.y) * (p.y - p2.y) < 0;\n    }\n\n    function line_circle_meet(p1, p2, p, r) {\n      let a = p2.y - p1.y,\n          b = p1.x - p2.x,\n          c = p1.x * (p1.y - p2.y) + p1.y * (p2.x - p1.x);\n      let d = Math.abs(a * p.x + b * p.y + c) / Math.pow(a * a + b * b, 0.5);\n      return d < r;\n    }\n\n    let meet_cnt = 0;\n    let dir = [1, 1];\n\n    for (let i = 0; i < 4; i++) {\n      let p1 = new Pos(sp.x + w * dir[0], sp.y + h * dir[1]);\n      let p2 = new Pos(sp.x + w * dir[0], sp.y - h * dir[1]);\n      if (pos_x_line_meet(p1, p2, enemy.pos)) meet_cnt++;\n\n      if (line_circle_meet(p1, p2, enemy.pos, enemy.r)) {\n        meet_cnt = 1;\n        break;\n      }\n\n      let tmp = dir[0];\n      dir[0] = -dir[1];\n      dir[1] = tmp;\n    }\n\n    return meet_cnt % 2 === 1;\n  }\n\n  trytoeat(item) {\n    const p = this.pos;\n    const i = item.pos;\n    return Math.pow(i.x - p.x, 2) + Math.pow(i.y - p.y, 2) <= Math.pow(this.r + item.r, 2);\n  }\n\n  move(dx, dy) {\n    this.pos.move(dx, dy);\n    this.bound();\n  }\n\n  bound() {\n    if (this.pos.x >= mapSize) this.pos.x = mapSize;\n    if (this.pos.y >= mapSize) this.pos.y = mapSize;\n    if (this.pos.x <= -mapSize) this.pos.x = -mapSize;\n    if (this.pos.y <= -mapSize) this.pos.y = -mapSize;\n  }\n\n  sw_rot(angle) {\n    let clockwise = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    if (clockwise) angle *= -1;\n    this.sw_angle += angle;\n    this.sw_angle %= 2 * Math.PI;\n  }\n\n  sw_pos() {\n    return this.pos.add(this.sw_r, 0).rot(this.pos, this.sw_angle);\n  }\n\n  hp_change(dhp) {\n    this.hp += dhp;\n  }\n\n  dead() {\n    return this.hp <= 0;\n  }\n\n}\n\nclass Item {\n  constructor(pos) {\n    this.id = getRandomId();\n    this.pos = pos;\n    this.color = getRandomColor();\n    this.xp = Math.floor(Math.random() * 16) + 1;\n    this.r = Math.floor(Math.random() * 3) + 3;\n  }\n\n  static schemaItem(sch) {\n    let newItem = new Item();\n    newItem.id = sch._id;\n    newItem.pos = new Pos(sch.pos.x, sch.pos.y);\n    newItem.color = sch.color;\n    newItem.xp = sch.xp;\n    newItem.r = sch.r;\n    return newItem;\n  }\n\n  static randomItem() {\n    return new Item(Pos.randomPos());\n  }\n\n  eaten(player) {\n    player.xp += this.xp;\n    this.constructor(Pos.randomPos());\n  }\n\n}\n\nexport { Player, Pos, Item };","map":{"version":3,"sources":["/Users/hong-eungi/git/tourne-sabre/frontend/src/object.js"],"names":["mapSize","getRandomId","letters","id","i","Math","floor","random","length","getRandomColor","color","j","k","Pos","constructor","x","y","randomPos","dist","v1","v2","pow","move","dx","dy","movev","v","add","addv","rot","center","angle","clockwise","cos","sin","Player","name","pos","r","sw_angle","PI","sw_r","sw_w","sw_h","sw_speed","hp","xp","randomPlayer","randomName","alphabet","p","schemaPlayer","sch","console","log","newPlayer","_id","trytohit","enemy","sp","sw_pos","w","h","pos_x_line_meet","p1","p2","line_circle_meet","a","b","c","d","abs","meet_cnt","dir","tmp","trytoeat","item","bound","sw_rot","hp_change","dhp","dead","Item","schemaItem","newItem","randomItem","eaten","player"],"mappings":"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","sourcesContent":["var mapSize = 3000;\nfunction getRandomId(){\n    var letters = 'HONGENGIisworkingreallyhard'\n    var id = '';\n    for(let i=0;i<6;i++){\n        id += letters[Math.floor(Math.random()*letters.length)]\n    }\n    return id;\n}\n\nfunction getRandomColor() {\n    var letters = '6789ABCDEF';\n    var color = '#';\n    let i = Math.floor(Math.random()*3);\n    for(let j=0;j<3;j++){\n        if(j==i) color+='FF';\n        else for (var k = 0; k < 2; k++) {\n            color += letters[Math.floor(Math.random() * 10)];\n        }\n    }\n    return color;\n}\n\nclass Pos{\n    constructor(x,y){\n        this.x=x;\n        this.y=y;\n    }\n\n    static randomPos(){\n        let x = Math.random() * 2 * mapSize - mapSize;\n        let y = Math.random() * 2 * mapSize - mapSize;\n        return new Pos(x,y)\n    }\n\n    dist(v1,v2){\n        return Math.pow((v1.x-v2.x)*(v1.x-v2.x)+(v1.y-v2.y)*(v1.y-v2.y),0.5)\n    }\n\n    move(dx,dy){\n        this.x+=dx;\n        this.y+=dy;\n    }\n\n    movev(v){\n        this.x+=v.x;\n        this.y+=v.y;\n    }\n    \n    add(x,y,i=1){\n        return new Pos(this.x+x*i, this.y+y*i)\n    }\n\n    addv(v,i=1){\n        return new Pos(this.x+v.x*i, this.y+v.y*i)\n    }\n\n    rot(center,angle,clockwise = true){ // center point, angle in radian\n        if(clockwise)angle*=-1;\n        const x = this.x - center.x\n        const y = this.y - center.y\n        this.x = Math.cos(angle)*x-Math.sin(angle)*y+center.x;\n        this.y = Math.sin(angle)*x+Math.cos(angle)*y+center.y;\n    }\n}\n\nclass Player{\n    constructor(name){\n        this.id = getRandomId();\n        this.name = name;\n        this.pos = new Pos(0,0);\n        this.r = 25;\n        this.sw_angle = 0 * (Math.PI/180); // sword angle\n        this.sw_r = 80; // sword radius\n        this.sw_w = 40;\n        this.sw_h = 100;\n        this.sw_speed = 4 * (Math.PI/180);\n        this.hp = 100;\n        this.xp = 0;\n        this.color = getRandomColor();\n    }\n\n    static randomPlayer(){\n        function randomName(){\n            let alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n            let name = '';\n            for(let i=0;i<10;i++)\n                name+=alphabet[Math.floor(Math.random()*alphabet.length)]\n            return name;\n        }\n        let p = new Player(randomName())\n        p.pos = Pos.randomPos();\n        return p;\n    }\n\n    static schemaPlayer(sch){\n        console.log('schema',sch.r)\n        let newPlayer = new Player()\n        newPlayer.id = sch._id\n        newPlayer.name = sch.name\n        newPlayer.pos = new Pos(sch.pos.x,sch.pos.y)\n        newPlayer.r = sch.r\n        newPlayer.sw_angle = sch.sw_angle\n        newPlayer.sw_r = sch.sw_r\n        newPlayer.sw_h = sch.sw_h\n        newPlayer.sw_speed = sch.sw_speed\n        newPlayer.hp = sch.hp\n        newPlayer.xp = sch.xp\n        newPlayer.color = sch.color\n        return newPlayer\n    }\n\n    trytohit(enemy){\n        let sp = this.sw_pos();\n        let w = this.sw_w;\n        let h = this.sw_h;\n        function pos_x_line_meet(p1,p2,p){\n            return (p.y-p1.y)*(p.x-p2.x)/(p1.y-p2.y)+p1.x>p.x &&\n                (p.y-p1.y)*(p.y-p2.y)<0;\n        }\n        function line_circle_meet(p1,p2,p,r){\n            let a=p2.y-p1.y,b=p1.x-p2.x,c=p1.x*(p1.y-p2.y)+p1.y*(p2.x-p1.x);\n            let d = Math.abs(a*p.x+b*p.y+c)/Math.pow(a*a+b*b,0.5)\n            return d<r;\n        }\n        let meet_cnt = 0;\n        let dir = [1,1];\n        for(let i=0;i<4;i++){\n            let p1 = new Pos(sp.x+w*dir[0],sp.y+h*dir[1]);\n            let p2 = new Pos(sp.x+w*dir[0],sp.y-h*dir[1]);\n            if(pos_x_line_meet(p1,p2,enemy.pos))meet_cnt++;\n            if(line_circle_meet(p1,p2,enemy.pos,enemy.r)){\n                meet_cnt=1;\n                break;\n            }\n            let tmp = dir[0];\n            dir[0]=-dir[1];\n            dir[1]=tmp;\n        }\n        return meet_cnt%2 === 1\n    }\n\n    trytoeat(item){\n        const p = this.pos;\n        const i = item.pos;\n        return Math.pow(i.x-p.x,2)+Math.pow(i.y-p.y,2)<=Math.pow(this.r+item.r,2)\n    }\n\n    move(dx,dy){\n        this.pos.move(dx,dy)\n        this.bound()\n    }\n\n    bound(){\n        if(this.pos.x>=mapSize)this.pos.x=mapSize;\n        if(this.pos.y>=mapSize)this.pos.y=mapSize;\n        if(this.pos.x<=-mapSize)this.pos.x=-mapSize;\n        if(this.pos.y<=-mapSize)this.pos.y=-mapSize;\n    }\n\n    sw_rot(angle,clockwise=true){\n        if(clockwise)angle*=-1;\n        this.sw_angle+=angle;\n        this.sw_angle%=(2*Math.PI);\n    }\n\n    sw_pos(){\n        return this.pos.add(this.sw_r,0).rot(this.pos,this.sw_angle);\n    }\n\n    hp_change(dhp){\n        this.hp+=dhp;\n    }\n\n    dead(){\n        return (this.hp <= 0)\n    }\n}\n\n\n\nclass Item{\n    constructor(pos){\n        this.id = getRandomId();\n        this.pos = pos; \n        this.color = getRandomColor();\n        this.xp = Math.floor(Math.random() * 16)+1;\n        this.r = Math.floor(Math.random() * 3)+3;\n    }\n\n    static schemaItem(sch){\n        let newItem = new Item()\n        newItem.id = sch._id\n        newItem.pos = new Pos(sch.pos.x,sch.pos.y)\n        newItem.color = sch.color\n        newItem.xp = sch.xp\n        newItem.r = sch.r\n        return newItem\n    }\n\n    static randomItem(){\n        return new Item(Pos.randomPos())\n    }\n\n    eaten(player){\n        player.xp+=this.xp;\n        this.constructor(Pos.randomPos())\n    }\n}\n\nexport {Player, Pos, Item}"]},"metadata":{},"sourceType":"module"}