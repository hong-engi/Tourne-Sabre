{"ast":null,"code":"var mapSize = 10000;\n\nclass Pos {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  randomPos() {\n    let x = Math.random() * 2 * mapSize - mapSize;\n    let y = Math.random() * 2 * mapSize - mapSize;\n    return new Pos(x, y);\n  }\n\n  move(dx, dy) {\n    this.x += dx;\n    this.y += dy;\n  }\n\n  movev(v) {\n    this.x += v.x;\n    this.y += v.y;\n  }\n\n  add(x, y) {\n    return new Pos(this.x + x, this.y + y);\n  }\n\n  addv(v) {\n    return new Pos(this.x + v.x, this.y + v.y);\n  }\n\n  rot(center, angle) {\n    let clockwise = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    // center point, angle in radian\n    if (clockwise) angle *= -1;\n    const x = this.x - center.x;\n    const y = this.y - center.y;\n    this.x = Math.cos(angle) * x - Math.sin(angle) * y + center.x;\n    this.y = Math.sin(angle) * x + Math.cos(angle) * y + center.y;\n  }\n\n}\n\nclass Player {\n  constructor(name) {\n    this.name = name;\n    this.pos = new Pos(0, 0);\n    this.r = 25;\n    this.sw_angle = 0 * (Math.PI / 180); // sword angle\n\n    this.sw_r = 80; // sword radius\n\n    this.sw_w = 30;\n    this.sw_h = 100;\n    this.hp = 100;\n    this.xp = 0;\n  }\n\n  hit(p2) {}\n\n  eat(item) {\n    const p = this.pos;\n    const i = item.pos;\n    if (Math.pow(i.x - p.x, 2) + Math.pow(i.y - p.y, 2) < pow(50, 2)) item.eaten(p);\n  }\n\n  move(dx, dy) {\n    this.pos.move(dx, dy);\n    this.bound();\n  }\n\n  bound() {\n    if (this.x >= mapSize) this.x = mapSize;\n    if (this.y >= mapSize) this.y = mapSize;\n    if (this.x <= -mapSize) this.x = -mapSize;\n    if (this.y <= -mapSize) this.y = -mapSize;\n  }\n\n  sw_rot(angle) {\n    let clockwise = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    if (clockwise) angle *= -1;\n    this.sw_angle += angle;\n    this.sw_angle %= 2 * Math.PI;\n  }\n\n  sw_pos() {\n    return this.pos.add(this.sw_r, 0).rot(this.pos, this.sw_angle);\n  }\n\n  hp_change(dhp) {\n    this.hp += dhp;\n  }\n\n  dead() {\n    return this.hp <= 0;\n  }\n\n}\n\nfunction getRandomColor() {\n  var letters = '0123456789ABCDEF';\n  var color = '#';\n\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n\n  return color;\n}\n\nclass Item {\n  constructor(pos) {\n    this.pos = pos;\n    this.color = getRandomColor();\n    this.xp = Math.floor(Math.random() * 16) + 1;\n  }\n\n  eaten(player) {\n    player.xp += this.xp;\n    this.constructor(Pos.randomPos());\n  }\n\n}\n\nexport { Player, Pos, Item };","map":{"version":3,"sources":["/Users/hong-eungi/git/tourne-sabre/frontend/src/object.js"],"names":["mapSize","Pos","constructor","x","y","randomPos","Math","random","move","dx","dy","movev","v","add","addv","rot","center","angle","clockwise","cos","sin","Player","name","pos","r","sw_angle","PI","sw_r","sw_w","sw_h","hp","xp","hit","p2","eat","item","p","i","pow","eaten","bound","sw_rot","sw_pos","hp_change","dhp","dead","getRandomColor","letters","color","floor","Item","player"],"mappings":"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","sourcesContent":["var mapSize = 10000;\n\nclass Pos{\n    constructor(x,y){\n        this.x=x;\n        this.y=y;\n    }\n\n    randomPos(){\n        let x = Math.random() * 2 * mapSize - mapSize;\n        let y = Math.random() * 2 * mapSize - mapSize;\n        return new Pos(x,y)\n    }\n\n    move(dx,dy){\n        this.x+=dx;\n        this.y+=dy;\n    }\n\n    movev(v){\n        this.x+=v.x;\n        this.y+=v.y;\n    }\n    \n    add(x,y){\n        return new Pos(this.x+x, this.y+y)\n    }\n\n    addv(v){\n        return new Pos(this.x+v.x, this.y+v.y)\n    }\n\n    rot(center,angle,clockwise = true){ // center point, angle in radian\n        if(clockwise)angle*=-1;\n        const x = this.x - center.x\n        const y = this.y - center.y\n        this.x = Math.cos(angle)*x-Math.sin(angle)*y+center.x;\n        this.y = Math.sin(angle)*x+Math.cos(angle)*y+center.y;\n    }\n}\n\nclass Player{\n    constructor(name){\n        this.name = name;\n        this.pos = new Pos(0,0);\n        this.r = 25;\n        this.sw_angle = 0 * (Math.PI/180); // sword angle\n        this.sw_r = 80; // sword radius\n        this.sw_w = 30;\n        this.sw_h = 100;\n        this.hp = 100;\n        this.xp = 0;\n    }\n\n    hit(p2){\n        \n    }\n\n    eat(item){\n        const p = this.pos;\n        const i = item.pos;\n        if(Math.pow(i.x-p.x,2)+Math.pow(i.y-p.y,2)<pow(50,2))\n            item.eaten(p);\n    }\n\n    move(dx,dy){\n        this.pos.move(dx,dy)\n        this.bound()\n    }\n\n    bound(){\n        if(this.x>=mapSize)this.x=mapSize;\n        if(this.y>=mapSize)this.y=mapSize;\n        if(this.x<=-mapSize)this.x=-mapSize;\n        if(this.y<=-mapSize)this.y=-mapSize;\n    }\n\n    sw_rot(angle,clockwise=true){\n        if(clockwise)angle*=-1;\n        this.sw_angle+=angle;\n        this.sw_angle%=(2*Math.PI);\n    }\n\n    sw_pos(){\n        return this.pos.add(this.sw_r,0).rot(this.pos,this.sw_angle);\n    }\n\n    hp_change(dhp){\n        this.hp+=dhp;\n    }\n\n    dead(){\n        return (this.hp <= 0)\n    }\n}\n\nfunction getRandomColor() {\n    var letters = '0123456789ABCDEF';\n    var color = '#';\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n}\n\nclass Item{\n    constructor(pos){\n        this.pos = pos; \n        this.color = getRandomColor();\n        this.xp = Math.floor(Math.random() * 16)+1;\n    }\n\n    eaten(player){\n        player.xp+=this.xp;\n        this.constructor(Pos.randomPos())\n    }\n}\n\nexport {Player, Pos, Item}"]},"metadata":{},"sourceType":"module"}