{"ast":null,"code":"import { Player, Item } from \"./object\";\nimport axios from \"axios\";\n\nclass mapConstructor {\n  constructor() {\n    this.itemList = [];\n    this.playerList = [];\n  }\n\n  getItems() {\n    axios.get(`/api/item`).then(response => {\n      this.itemList = response.data;\n    });\n  }\n\n  getPlayers() {\n    axios.get(`/api/player`).then(response => {\n      this.playerList = response.data;\n    });\n  }\n\n  ate(item) {\n    axios.delete(`/api/item/${item._id}/ate`).then(() => axios.get('/api/item')).then(response => {\n      this.itemList = response.data;\n    });\n  }\n\n  kill(player) {\n    axios.delete(`/api/player/${player._id}/kill`).then(() => axios.get('/api/player')).then(response => {\n      this.playerList = response.data;\n    });\n  }\n\n  addPlayer(player) {\n    if (player == 'undefined') console('asdf');else axios.post(`/api/player/${player._id}/add`, {\n      name: player.name\n    }).then(() => axios.get('/api/player')).then(response => {\n      this.playerList = response.data;\n    });\n  }\n\n  damage(player, dmg) {\n    axios.put(`/api/player/${player._id}/damage`, dmg).then(() => axios.get('/api/player')).then(response => {\n      this.playerList = response.data;\n    });\n  }\n\n}\n\n;\nvar map = new mapConstructor();\nexport { map };","map":{"version":3,"sources":["/Users/hong-eungi/git/tourne-sabre/frontend/src/map.js"],"names":["Player","Item","axios","mapConstructor","constructor","itemList","playerList","getItems","get","then","response","data","getPlayers","ate","item","delete","_id","kill","player","addPlayer","console","post","name","damage","dmg","put","map"],"mappings":"AAAA,SAASA,MAAT,EAAgBC,IAAhB,QAA4B,UAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,cAAN,CAAoB;AAChBC,EAAAA,WAAW,GAAE;AACT,SAAKC,QAAL,GAAc,EAAd;AACA,SAAKC,UAAL,GAAgB,EAAhB;AACH;;AACDC,EAAAA,QAAQ,GAAE;AACNL,IAAAA,KAAK,CAACM,GAAN,CAAW,WAAX,EACCC,IADD,CACMC,QAAQ,IAAI;AACd,WAAKL,QAAL,GAAgBK,QAAQ,CAACC,IAAzB;AACH,KAHD;AAIH;;AACDC,EAAAA,UAAU,GAAE;AACRV,IAAAA,KAAK,CAACM,GAAN,CAAW,aAAX,EACCC,IADD,CACMC,QAAQ,IAAI;AACd,WAAKJ,UAAL,GAAkBI,QAAQ,CAACC,IAA3B;AACH,KAHD;AAIH;;AAEDE,EAAAA,GAAG,CAACC,IAAD,EAAM;AACLZ,IAAAA,KAAK,CAACa,MAAN,CAAc,aAAYD,IAAI,CAACE,GAAI,MAAnC,EACKP,IADL,CACU,MAAMP,KAAK,CAACM,GAAN,CAAU,WAAV,CADhB,EAEKC,IAFL,CAEUC,QAAQ,IAAI;AACd,WAAKL,QAAL,GAAgBK,QAAQ,CAACC,IAAzB;AACP,KAJD;AAKH;;AAEDM,EAAAA,IAAI,CAACC,MAAD,EAAQ;AACRhB,IAAAA,KAAK,CAACa,MAAN,CAAc,eAAcG,MAAM,CAACF,GAAI,OAAvC,EACKP,IADL,CACU,MAAMP,KAAK,CAACM,GAAN,CAAU,aAAV,CADhB,EAEKC,IAFL,CAEUC,QAAQ,IAAI;AACd,WAAKJ,UAAL,GAAkBI,QAAQ,CAACC,IAA3B;AACP,KAJD;AAKH;;AAEDQ,EAAAA,SAAS,CAACD,MAAD,EAAQ;AACb,QAAGA,MAAM,IAAI,WAAb,EAAyBE,OAAO,CAAC,MAAD,CAAP,CAAzB,KAEAlB,KAAK,CAACmB,IAAN,CAAY,eAAcH,MAAM,CAACF,GAAI,MAArC,EAA2C;AAACM,MAAAA,IAAI,EAACJ,MAAM,CAACI;AAAb,KAA3C,EACKb,IADL,CACU,MAAMP,KAAK,CAACM,GAAN,CAAU,aAAV,CADhB,EAEKC,IAFL,CAEUC,QAAQ,IAAI;AACd,WAAKJ,UAAL,GAAkBI,QAAQ,CAACC,IAA3B;AACP,KAJD;AAKH;;AAEDY,EAAAA,MAAM,CAACL,MAAD,EAAQM,GAAR,EAAY;AACdtB,IAAAA,KAAK,CAACuB,GAAN,CAAW,eAAcP,MAAM,CAACF,GAAI,SAApC,EAA6CQ,GAA7C,EACKf,IADL,CACU,MAAMP,KAAK,CAACM,GAAN,CAAU,aAAV,CADhB,EAEKC,IAFL,CAEUC,QAAQ,IAAI;AACd,WAAKJ,UAAL,GAAkBI,QAAQ,CAACC,IAA3B;AACP,KAJD;AAKH;;AAlDe;;AAmDnB;AAED,IAAIe,GAAG,GAAG,IAAIvB,cAAJ,EAAV;AAEA,SAAQuB,GAAR","sourcesContent":["import { Player,Item } from \"./object\";\nimport axios from \"axios\";\n\nclass mapConstructor{\n    constructor(){\n        this.itemList=[];\n        this.playerList=[];\n    }\n    getItems(){\n        axios.get(`/api/item`)\n        .then(response => {\n            this.itemList = response.data;\n        })\n    }\n    getPlayers(){\n        axios.get(`/api/player`)\n        .then(response => {\n            this.playerList = response.data;\n        })\n    }\n\n    ate(item){\n        axios.delete(`/api/item/${item._id}/ate`)\n            .then(() => axios.get('/api/item'))\n            .then(response => {\n                this.itemList = response.data;\n        });\n    };\n\n    kill(player){\n        axios.delete(`/api/player/${player._id}/kill`)\n            .then(() => axios.get('/api/player'))\n            .then(response => {\n                this.playerList = response.data;\n        });\n    };\n\n    addPlayer(player){\n        if(player == 'undefined')console('asdf')\n        else\n        axios.post(`/api/player/${player._id}/add`,{name:player.name})\n            .then(() => axios.get('/api/player'))\n            .then(response => {\n                this.playerList = response.data;\n        });\n    };\n\n    damage(player,dmg){\n        axios.put(`/api/player/${player._id}/damage`,dmg)\n            .then(() => axios.get('/api/player'))\n            .then(response => {\n                this.playerList = response.data;\n        });\n    }\n};\n\nvar map = new mapConstructor()\n\nexport {map}"]},"metadata":{},"sourceType":"module"}