{"ast":null,"code":"import sword from './sword.png';\nimport { map } from './map.js';\nimport { Pos, Player, Item } from './object.js';\nconst canvas_size = 1200;\nconst center_h = canvas_size / 2;\nconst center_w = canvas_size / 2;\nvar img = new Image();\nimg.src = sword; //todo : canvas.width,canvas.height??\n\nfunction draw(ctx, player) {\n  let playerList = [];\n  ctx.fillStyle = 'white';\n  ctx.fillRect(0, 0, canvas_size, canvas_size);\n  defaultMap(ctx);\n\n  for (let i = 0; i < map.itemList.length; i++) {\n    let item = Item.schemaItem(map.itemList[i]);\n\n    if (player.pos.dist(item.pos) < 550) {\n      drawItem(ctx, player, item);\n    }\n  }\n\n  for (let i = 0; i < map.playerList.length; i++) {\n    let player2 = Player.schemaPlayer(map.playerList[i]);\n\n    if (player.pos.dist(player2.pos) < 550) {\n      playerList.push(player2);\n    }\n  }\n\n  for (let i = 0; i < playerList.length; i++) {} //drawing a hole\n\n\n  ctx.StrokeStyle = 'black';\n  ctx.fillStyle = 'black';\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(canvas_size, 0);\n  ctx.lineTo(canvas_size, canvas_size);\n  ctx.lineTo(0, canvas_size);\n  ctx.lineTo(0, 0);\n  ctx.closePath();\n  ctx.arc(center_w, center_h, 400, 0, Math.PI * 2, true);\n  ctx.closePath();\n  ctx.fill();\n  /*\n  ctx.fillStyle = 'purple'\n  let sp = player.sw_pos()\n  var circle = new Path2D();\n  circle.arc(center_w+sp.x-player.pos.x, center_h+sp.y-player.pos.y, 3, 0, 2 * Math.PI);\n  circle.arc(center_w-player.pos.x, center_h-player.pos.y, 3, 0, 2 * Math.PI);\n  ctx.fill(circle);\n  */\n\n  ctx.font = '20px Dosis-Bold';\n  ctx.fillStyle = 'white';\n  let text = '(' + String(Math.round(player.pos.x)) + ',' + String(Math.round(player.pos.y)) + ')';\n  ctx.fillText(text, 200, 300);\n  /*\n  let w = player.sw_w/2;\n  let h = player.sw_h/2;\n  let alpha = Math.atan(w/h)\n  let beta = player.sw_angle-alpha\n  let r = Math.pow(w*w+h*h,0.5)\n  var dir = [new Pos(0,-r).rot(new Pos(0,0),beta),\n      new Pos(0,-r).rot(new Pos(0,0),beta+2*alpha)]\n  for(let i=0;i<4;i++){\n      let xx = new Path2D();\n      let p1 = sp.addv(dir[0]);\n      ctx.fillStyle = 'blue'\n      xx.arc(center_w+p1.x-player.pos.x, center_h+p1.y-player.pos.y, 3, 0, 2 * Math.PI);\n      ctx.fill(xx);\n      let tmp = dir[0];\n      dir[0] = new Pos(0,0).addv(dir[1],-1);\n      dir[1] = tmp;\n  }\n  */\n}\n\nfunction defaultMap(ctx) {\n  var circle = new Path2D();\n  circle.arc(center_h, center_w, 400, 0, 2 * Math.PI);\n  ctx.fillStyle = 'white';\n  ctx.strokeStyle = 'gray';\n  ctx.lineWidth = 5;\n  ctx.fill(circle);\n  ctx.stroke(circle);\n}\n\nfunction drawItem(ctx, me, i) {\n  var circle = new Path2D();\n  let dpos = i.pos.addv(me.pos, -1),\n      x = center_w + dpos.x,\n      y = center_h + dpos.y;\n  circle.arc(x, y, i.r, 0, 2 * Math.PI);\n  ctx.fillStyle = i.color;\n  ctx.strokeStyle = 'black';\n  ctx.lineWidth = 0.5;\n  ctx.fill(circle);\n  ctx.stroke(circle);\n}\n\nfunction drawPlayer(ctx, me, p) {\n  if (me.id == p.id) {\n    p = me;\n  }\n\n  var circle = new Path2D();\n  let dpos = p.pos.addv(me.pos, -1),\n      x = center_w + dpos.x,\n      y = center_h + dpos.y;\n  circle.arc(x, y, p.r, 0, 2 * Math.PI);\n  ctx.fillStyle = p.color;\n  if (me.id == p.id) ctx.fillStyle = 'red';\n  ctx.strokeStyle = 'black';\n  ctx.lineWidth = 1;\n  ctx.fill(circle);\n  ctx.stroke(circle);\n  drawSword(ctx, me, p);\n  drawString(ctx, me, p);\n  drawHealthbar(ctx, me, p);\n}\n\nfunction drawHealthbar(ctx, me, p) {\n  let dpos = p.pos.addv(me.pos, -1),\n      x = center_w + dpos.x,\n      y = center_h + dpos.y;\n  ctx.strokeStyle = '#77FF77';\n  ctx.fillStyle = '#77FF77';\n  ctx.lineWidth = 2;\n  ctx.fillRect(x - p.r, y + p.r + 3, 2 * p.r * p.hp / p.hpmax, 10);\n  ctx.strokeStyle = '#77FF77';\n  ctx.fillStyle = \"rgba(0, 0, 0, 0.2)\";\n  ctx.fillRect(x - p.r, y + p.r + 3, 2 * p.r, 10);\n}\n\nfunction drawSword(ctx, me, p) {\n  const angle = -p.sw_angle;\n  let dpos = p.pos.addv(me.pos, -1),\n      x = center_w + dpos.x,\n      y = center_h + dpos.y;\n  const r = p.r + p.sw_r,\n        w = p.sw_w,\n        h = p.sw_h;\n  ctx.save();\n  ctx.translate(x, y);\n  ctx.rotate(angle);\n  ctx.drawImage(img, -w / 2, -r - h / 2, w, h);\n  ctx.restore();\n}\n\nfunction drawString(ctx, me, p) {\n  let dpos = p.pos.addv(me.pos, -1),\n      x = center_w + dpos.x,\n      y = center_h + dpos.y;\n  ctx.fillStyle = 'black';\n  if (me.id == p.id) ctx.fillStyle = 'white';\n  ctx.font = String(Math.floor(p.r * 15 / 25)) + 'px Dosis-Bold';\n  let text = p.name;\n  let width = ctx.measureText(text).width;\n  ctx.fillText(text, x - width / 2, y + p.r * 5 / 25);\n  ctx.font = String(Math.max(10, p.r * 10 / 25)) + 'px Dosis-ExtraBold';\n  text = String(p.lv) + ' lv';\n  width = ctx.measureText(text).width;\n  ctx.fillText(text, x - width / 2, y + p.r * 18 / 25);\n}\n\nexport default draw;","map":{"version":3,"sources":["/Users/hong-eungi/git/tourne-sabre/frontend/src/mapdraw.js"],"names":["sword","map","Pos","Player","Item","canvas_size","center_h","center_w","img","Image","src","draw","ctx","player","playerList","fillStyle","fillRect","defaultMap","i","itemList","length","item","schemaItem","pos","dist","drawItem","player2","schemaPlayer","push","StrokeStyle","beginPath","moveTo","lineTo","closePath","arc","Math","PI","fill","font","text","String","round","x","y","fillText","circle","Path2D","strokeStyle","lineWidth","stroke","me","dpos","addv","r","color","drawPlayer","p","id","drawSword","drawString","drawHealthbar","hp","hpmax","angle","sw_angle","sw_r","w","sw_w","h","sw_h","save","translate","rotate","drawImage","restore","floor","name","width","measureText","max","lv"],"mappings":"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","sourcesContent":["import sword from './sword.png'\nimport {map} from './map.js'\nimport {Pos, Player, Item} from './object.js'\nconst canvas_size = 1200;\nconst center_h = canvas_size/2;\nconst center_w = canvas_size/2;\n\nvar img = new Image();\nimg.src = sword; \n\n//todo : canvas.width,canvas.height??\nfunction draw(ctx,player) {\n\n    let playerList = []\n\n    ctx.fillStyle='white'\n    ctx.fillRect(0,0,canvas_size,canvas_size);\n    defaultMap(ctx)\n\n    for(let i=0;i<map.itemList.length;i++){\n        let item = Item.schemaItem(map.itemList[i])\n        if(player.pos.dist(item.pos)<550){\n            drawItem(ctx,player,item)\n        }\n    }\n\n    for(let i=0;i<map.playerList.length;i++){\n        let player2 = Player.schemaPlayer(map.playerList[i])\n        if(player.pos.dist(player2.pos)<550){\n            playerList.push(player2)\n        }\n    }\n    for(let i=0;i<playerList.length;i++){\n        \n    }\n\n    //drawing a hole\n    ctx.StrokeStyle='black'\n    ctx.fillStyle='black'\n    ctx.beginPath()\n    ctx.moveTo(0, 0);\n    ctx.lineTo(canvas_size, 0);\n    ctx.lineTo(canvas_size,canvas_size);\n    ctx.lineTo(0, canvas_size);\n    ctx.lineTo(0,0);\n    ctx.closePath();\n    ctx.arc(center_w,center_h,400,0,Math.PI*2,true);\n    ctx.closePath();\n    ctx.fill();\n    /*\n    ctx.fillStyle = 'purple'\n    let sp = player.sw_pos()\n    var circle = new Path2D();\n    circle.arc(center_w+sp.x-player.pos.x, center_h+sp.y-player.pos.y, 3, 0, 2 * Math.PI);\n    circle.arc(center_w-player.pos.x, center_h-player.pos.y, 3, 0, 2 * Math.PI);\n    ctx.fill(circle);\n    */\n\n    ctx.font = '20px Dosis-Bold';\n    ctx.fillStyle = 'white'\n    let text = '('+String(Math.round(player.pos.x))+','+String(Math.round(player.pos.y))+')'\n    ctx.fillText(text,200,300)\n    /*\n    let w = player.sw_w/2;\n    let h = player.sw_h/2;\n    let alpha = Math.atan(w/h)\n    let beta = player.sw_angle-alpha\n    let r = Math.pow(w*w+h*h,0.5)\n    var dir = [new Pos(0,-r).rot(new Pos(0,0),beta),\n        new Pos(0,-r).rot(new Pos(0,0),beta+2*alpha)]\n    for(let i=0;i<4;i++){\n        let xx = new Path2D();\n        let p1 = sp.addv(dir[0]);\n        ctx.fillStyle = 'blue'\n        xx.arc(center_w+p1.x-player.pos.x, center_h+p1.y-player.pos.y, 3, 0, 2 * Math.PI);\n        ctx.fill(xx);\n        let tmp = dir[0];\n        dir[0] = new Pos(0,0).addv(dir[1],-1);\n        dir[1] = tmp;\n    }\n    */\n\n}\n\nfunction defaultMap(ctx){\n    var circle = new Path2D();\n    circle.arc(center_h, center_w, 400, 0, 2 * Math.PI);\n    ctx.fillStyle='white';\n    ctx.strokeStyle='gray';\n    ctx.lineWidth=5;\n    ctx.fill(circle);\n    ctx.stroke(circle);\n}\n\nfunction drawItem(ctx,me,i){\n    var circle = new Path2D();\n    let dpos = i.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    circle.arc(x, y, i.r, 0, 2 * Math.PI);\n    ctx.fillStyle=i.color;\n    ctx.strokeStyle='black';\n    ctx.lineWidth=0.5;\n    ctx.fill(circle);\n    ctx.stroke(circle);\n}\n\nfunction drawPlayer(ctx,me,p){\n    if(me.id == p.id){p=me}\n    var circle = new Path2D();\n    let dpos = p.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    circle.arc(x, y, p.r, 0, 2 * Math.PI);\n    ctx.fillStyle=p.color;\n    if(me.id == p.id)ctx.fillStyle='red';\n    ctx.strokeStyle='black';\n    ctx.lineWidth=1;\n    ctx.fill(circle);\n    ctx.stroke(circle);\n    drawSword(ctx,me,p)\n    drawString(ctx,me,p)\n    drawHealthbar(ctx,me,p)\n}\n\nfunction drawHealthbar(ctx,me,p){\n    let dpos = p.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    ctx.strokeStyle = '#77FF77'\n    ctx.fillStyle = '#77FF77'\n    ctx.lineWidth=2;\n    ctx.fillRect(x-p.r,y+p.r+3,2*p.r*p.hp/p.hpmax,10)\n    ctx.strokeStyle = '#77FF77'\n    ctx.fillStyle = \"rgba(0, 0, 0, 0.2)\";\n    ctx.fillRect(x-p.r,y+p.r+3,2*p.r,10)\n}\n\nfunction drawSword(ctx,me,p){\n    const angle = -p.sw_angle;\n    let dpos = p.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    const r = p.r+p.sw_r,w=p.sw_w,h=p.sw_h;\n    ctx.save();\n        ctx.translate(x,y);\n        ctx.rotate(angle);\n        ctx.drawImage(img,-w/2,-r-h/2,w,h);\n    ctx.restore();\n}\n\nfunction drawString(ctx,me,p){\n    let dpos = p.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    ctx.fillStyle='black';\n    if(me.id == p.id)ctx.fillStyle='white';\n    ctx.font = String(Math.floor(p.r*15/25))+'px Dosis-Bold';\n    let text = p.name\n    let width = ctx.measureText(text).width;\n    ctx.fillText(text,x-(width/2),y+(p.r*5/25))\n\n    ctx.font = String(Math.max(10,p.r*10/25))+'px Dosis-ExtraBold';\n    text = String(p.lv)+' lv'\n    width = ctx.measureText(text).width;\n    ctx.fillText(text,x-(width/2),y+(p.r*18/25))\n\n}\n\nexport default draw;"]},"metadata":{},"sourceType":"module"}