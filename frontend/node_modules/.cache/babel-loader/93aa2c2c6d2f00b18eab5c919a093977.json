{"ast":null,"code":"import sword from './sword.png';\nconst map_size = 1200;\nconst center_h = map_size / 2;\nconst center_w = map_size / 2; //todo : canvas.width,canvas.height??\n\nfunction draw(ctx, player) {\n  defaultMap(ctx);\n  drawPlayer(ctx, player);\n  player.sw_rot(1 * (2 * Math.PI / 180));\n}\n\nfunction defaultMap(ctx) {\n  var circle = new Path2D();\n  circle.arc(center_h, center_w, 400, 0, 2 * Math.PI);\n  ctx.fillStyle = 'white';\n  ctx.strokeStyle = 'gray';\n  ctx.lineWidth = 5;\n  ctx.fill(circle);\n  ctx.stroke(circle);\n}\n\nfunction drawPlayer(ctx, p) {\n  var circle = new Path2D();\n  circle.arc(center_h, center_w, p.r, 0, 2 * Math.PI);\n  ctx.fillStyle = 'red';\n  ctx.strokeStyle = 'black';\n  ctx.lineWidth = 3;\n  ctx.fill(circle);\n  ctx.stroke(circle);\n  var img = new Image();\n\n  img.onload = function () {\n    drawSword(ctx, p, img);\n  };\n\n  img.src = sword;\n  drawString(ctx, p.name, center_h, center_w);\n}\n\nfunction drawSword(ctx, p, img) {\n  const angle = -p.sw_angle;\n  const r = p.sw_r,\n        w = p.sw_w,\n        h = p.sw_h;\n  ctx.save();\n  ctx.translate(center_w, center_h);\n  ctx.rotate(angle);\n  ctx.drawImage(img, 0 - w / 2, -r - h / 2, w, h);\n  ctx.restore();\n  console.log(angle);\n}\n\nfunction drawString(ctx, text, x, y) {\n  ctx.fillStyle = 'black';\n  ctx.font = '15px Dosis-Bold';\n  let width = ctx.measureText(text).width;\n  ctx.fillText(text, x - width / 2, y + 5);\n}\n\nexport default draw;","map":{"version":3,"sources":["/Users/hong-eungi/git/tourne-sabre/frontend/src/mapdraw.js"],"names":["sword","map_size","center_h","center_w","draw","ctx","player","defaultMap","drawPlayer","sw_rot","Math","PI","circle","Path2D","arc","fillStyle","strokeStyle","lineWidth","fill","stroke","p","r","img","Image","onload","drawSword","src","drawString","name","angle","sw_angle","sw_r","w","sw_w","h","sw_h","save","translate","rotate","drawImage","restore","console","log","text","x","y","font","width","measureText","fillText"],"mappings":"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","sourcesContent":["import sword from './sword.png'\nconst map_size = 1200;\nconst center_h = map_size/2;\nconst center_w = map_size/2;\n//todo : canvas.width,canvas.height??\nfunction draw(ctx,player) {\n    defaultMap(ctx)\n    drawPlayer(ctx,player);\n    player.sw_rot(1*(2*Math.PI/180))\n}\n\nfunction defaultMap(ctx){\n    var circle = new Path2D();\n    circle.arc(center_h, center_w, 400, 0, 2 * Math.PI);\n    ctx.fillStyle='white';\n    ctx.strokeStyle='gray';\n    ctx.lineWidth=5;\n    ctx.fill(circle);\n    ctx.stroke(circle);\n}\n\nfunction drawPlayer(ctx,p){\n    var circle = new Path2D();\n    circle.arc(center_h, center_w, p.r, 0, 2 * Math.PI);\n    ctx.fillStyle='red';\n    ctx.strokeStyle='black';\n    ctx.lineWidth=3;\n    ctx.fill(circle);\n    ctx.stroke(circle);\n    var img = new Image();\n    img.onload = function(){\n        drawSword(ctx,p,img)\n    }\n    img.src = sword; \n    drawString(ctx,p.name,center_h,center_w)\n}\n\nfunction drawSword(ctx,p,img){\n    const angle = -p.sw_angle;\n    const r = p.sw_r,w=p.sw_w,h=p.sw_h;\n    ctx.save();\n    ctx.translate(center_w,center_h);\n    ctx.rotate(angle);\n    ctx.drawImage(img,0-w/2,-r-h/2,w,h);\n    ctx.restore();\n    console.log(angle);\n}\n\nfunction drawString(ctx,text,x,y){\n    ctx.fillStyle='black';\n    ctx.font = '15px Dosis-Bold';\n    let width = ctx.measureText(text).width;\n    ctx.fillText(text,x-(width/2),y+5)\n}\n\nexport default draw;"]},"metadata":{},"sourceType":"module"}