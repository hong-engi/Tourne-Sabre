{"ast":null,"code":"import sword from './sword.png';\nimport { map } from './map.js';\nimport { Pos, Player, Item } from './object.js';\nconst canvas_size = 1000;\nconst center_h = canvas_size / 2;\nconst center_w = canvas_size / 2;\nvar img = new Image();\nimg.src = sword; //todo : canvas.width,canvas.height??\n\nfunction draw(ctx, me) {\n  let playerList = [];\n  ctx.fillStyle = 'white';\n  ctx.fillRect(0, 0, canvas_size, canvas_size);\n\n  if (me != null || me.id != 'DEAD') {\n    for (let i = 0; i < map.itemList.length; i++) {\n      let item = Item.schemaItem(map.itemList[i]);\n\n      if (me.pos.dist(item.pos) < 550) {\n        drawItem(ctx, me, item);\n      }\n    }\n\n    for (let i = 0; i < map.playerList.length; i++) {\n      let player = Player.schemaPlayer(map.playerList[i]);\n\n      if (me.pos.dist(player.pos) < 550) {\n        playerList.push(player);\n      }\n    }\n\n    for (let i = 0; i < playerList.length; i++) {\n      if (me.id == playerList[i].id) {\n        me = playerList[i];\n      }\n\n      drawPlayer(ctx, me, playerList[i]);\n      drawSword(ctx, me, playerList[i]);\n    }\n    /*\n    ctx.fillStyle = 'purple'\n    let sp = me.sw_pos()\n    var circle = new Path2D();\n    circle.arc(center_w+sp.x-me.pos.x, center_h+sp.y-me.pos.y, 3, 0, 2 * Math.PI);\n    circle.arc(center_w-me.pos.x, center_h-me.pos.y, 3, 0, 2 * Math.PI);\n    ctx.fill(circle);\n    */\n\n    /*\n    let w = me.sw_w/2;\n    let h = me.sw_h/2;\n    let alpha = Math.atan(w/h)\n    let beta = me.sw_angle-alpha\n    let r = Math.pow(w*w+h*h,0.5)\n    var dir = [new Pos(0,-r).rot(new Pos(0,0),beta),\n        new Pos(0,-r).rot(new Pos(0,0),beta+2*alpha)]\n    for(let i=0;i<4;i++){\n        let xx = new Path2D();\n        let p1 = sp.addv(dir[0]);\n        ctx.fillStyle = 'blue'\n        xx.arc(center_w+p1.x-me.pos.x, center_h+p1.y-me.pos.y, 3, 0, 2 * Math.PI);\n        ctx.fill(xx);\n        let tmp = dir[0];\n        dir[0] = new Pos(0,0).addv(dir[1],-1);\n        dir[1] = tmp;\n    }\n    */\n\n  }\n\n  defaultMap(ctx);\n\n  if (me != null || me.id != 'DEAD') {\n    ctx.font = '20px Dosis-Bold';\n    ctx.fillStyle = 'green';\n    let text = '(' + String(Math.round(me.pos.x)) + ',' + String(Math.round(me.pos.y)) + ')';\n    ctx.fillText(text, 100, 200);\n  }\n}\n\nfunction defaultMap(ctx) {\n  ctx.StrokeStyle = 'black';\n  ctx.fillStyle = 'black';\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(canvas_size, 0);\n  ctx.lineTo(canvas_size, canvas_size);\n  ctx.lineTo(0, canvas_size);\n  ctx.lineTo(0, 0);\n  ctx.closePath();\n  ctx.arc(center_w, center_h, 400, 0, Math.PI * 2, true);\n  ctx.closePath();\n  ctx.fill();\n}\n\nfunction drawItem(ctx, me, i) {\n  var circle = new Path2D();\n  let dpos = i.pos.addv(me.pos, -1),\n      x = center_w + dpos.x,\n      y = center_h + dpos.y;\n  circle.arc(x, y, i.r, 0, 2 * Math.PI);\n  ctx.fillStyle = i.color;\n  ctx.strokeStyle = 'black';\n  ctx.lineWidth = 0.5;\n  ctx.fill(circle);\n  ctx.stroke(circle);\n}\n\nfunction drawPlayer(ctx, me, p) {\n  if (me.id == p.id) {\n    p = me;\n  }\n\n  var circle = new Path2D();\n  let dpos = p.pos.addv(me.pos, -1),\n      x = center_w + dpos.x,\n      y = center_h + dpos.y;\n  circle.arc(x, y, p.r, 0, 2 * Math.PI);\n  ctx.fillStyle = p.color;\n  if (me.id == p.id) ctx.fillStyle = 'red';\n  ctx.strokeStyle = 'black';\n  ctx.lineWidth = 1;\n  ctx.fill(circle);\n  ctx.stroke(circle);\n  drawSword(ctx, me, p);\n  drawString(ctx, me, p);\n  drawHealthbar(ctx, me, p);\n}\n\nfunction drawHealthbar(ctx, me, p) {\n  let dpos = p.pos.addv(me.pos, -1),\n      x = center_w + dpos.x,\n      y = center_h + dpos.y;\n  ctx.strokeStyle = '#77FF77';\n  ctx.fillStyle = '#77FF77';\n  ctx.lineWidth = 2;\n  ctx.fillRect(x - p.r, y + p.r + 3, 2 * p.r * p.hp / p.hpmax, 10);\n  ctx.strokeStyle = '#77FF77';\n  ctx.fillStyle = \"rgba(0, 0, 0, 0.2)\";\n  ctx.fillRect(x - p.r, y + p.r + 3, 2 * p.r, 10);\n}\n\nfunction drawSword(ctx, me, p) {\n  const angle = -p.sw_angle;\n  let dpos = p.pos.addv(me.pos, -1),\n      x = center_w + dpos.x,\n      y = center_h + dpos.y;\n  const r = p.r + p.sw_r,\n        w = p.sw_w,\n        h = p.sw_h;\n  ctx.save();\n  ctx.translate(x, y);\n  ctx.rotate(angle);\n  ctx.drawImage(img, -w / 2, -r - h / 2, w, h);\n  ctx.restore();\n}\n\nfunction drawString(ctx, me, p) {\n  let dpos = p.pos.addv(me.pos, -1),\n      x = center_w + dpos.x,\n      y = center_h + dpos.y;\n  ctx.fillStyle = 'black';\n  if (me.id == p.id) ctx.fillStyle = 'white';\n  ctx.font = String(p.r * 15 / 25) + 'px Dosis-Bold';\n  let text = p.name;\n  let width = ctx.measureText(text).width;\n  ctx.fillText(text, x - width / 2, y + p.r * 5 / 25);\n  ctx.font = String(Math.max(10, p.r * 10 / 25)) + 'px Dosis-ExtraBold';\n  text = String(p.lv) + ' lv';\n  width = ctx.measureText(text).width;\n  ctx.fillText(text, x - width / 2, y + p.r * 18 / 25);\n}\n\nexport default draw;","map":{"version":3,"sources":["/Users/hong-eungi/git/tourne-sabre/frontend/src/mapdraw.js"],"names":["sword","map","Pos","Player","Item","canvas_size","center_h","center_w","img","Image","src","draw","ctx","me","playerList","fillStyle","fillRect","id","i","itemList","length","item","schemaItem","pos","dist","drawItem","player","schemaPlayer","push","drawPlayer","drawSword","defaultMap","font","text","String","Math","round","x","y","fillText","StrokeStyle","beginPath","moveTo","lineTo","closePath","arc","PI","fill","circle","Path2D","dpos","addv","r","color","strokeStyle","lineWidth","stroke","p","drawString","drawHealthbar","hp","hpmax","angle","sw_angle","sw_r","w","sw_w","h","sw_h","save","translate","rotate","drawImage","restore","name","width","measureText","max","lv"],"mappings":"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","sourcesContent":["import sword from './sword.png'\nimport {map} from './map.js'\nimport {Pos, Player, Item} from './object.js'\nconst canvas_size = 1000;\nconst center_h = canvas_size/2;\nconst center_w = canvas_size/2;\n\nvar img = new Image();\nimg.src = sword; \n\n//todo : canvas.width,canvas.height??\nfunction draw(ctx,me) {\n\n    let playerList = []\n    ctx.fillStyle='white'\n    ctx.fillRect(0,0,canvas_size,canvas_size);\n    if(me!=null || me.id != 'DEAD'){\n        for(let i=0;i<map.itemList.length;i++){\n            let item = Item.schemaItem(map.itemList[i])\n            if(me.pos.dist(item.pos)<550){\n                drawItem(ctx,me,item)\n            }\n        }\n\n        for(let i=0;i<map.playerList.length;i++){\n            let player = Player.schemaPlayer(map.playerList[i])\n            if(me.pos.dist(player.pos)<550){\n                playerList.push(player)\n            }\n        }\n        for(let i=0;i<playerList.length;i++){   \n            if(me.id == playerList[i].id) {me=playerList[i]}\n            drawPlayer(ctx,me,playerList[i])\n            drawSword(ctx,me,playerList[i])\n        }\n\n        /*\n        ctx.fillStyle = 'purple'\n        let sp = me.sw_pos()\n        var circle = new Path2D();\n        circle.arc(center_w+sp.x-me.pos.x, center_h+sp.y-me.pos.y, 3, 0, 2 * Math.PI);\n        circle.arc(center_w-me.pos.x, center_h-me.pos.y, 3, 0, 2 * Math.PI);\n        ctx.fill(circle);\n        */\n        /*\n        let w = me.sw_w/2;\n        let h = me.sw_h/2;\n        let alpha = Math.atan(w/h)\n        let beta = me.sw_angle-alpha\n        let r = Math.pow(w*w+h*h,0.5)\n        var dir = [new Pos(0,-r).rot(new Pos(0,0),beta),\n            new Pos(0,-r).rot(new Pos(0,0),beta+2*alpha)]\n        for(let i=0;i<4;i++){\n            let xx = new Path2D();\n            let p1 = sp.addv(dir[0]);\n            ctx.fillStyle = 'blue'\n            xx.arc(center_w+p1.x-me.pos.x, center_h+p1.y-me.pos.y, 3, 0, 2 * Math.PI);\n            ctx.fill(xx);\n            let tmp = dir[0];\n            dir[0] = new Pos(0,0).addv(dir[1],-1);\n            dir[1] = tmp;\n        }\n        */\n    }\n    defaultMap(ctx)\n\n    if(me!=null || me.id != 'DEAD'){\n        ctx.font = '20px Dosis-Bold';\n        ctx.fillStyle = 'green'\n        let text = '('+String(Math.round(me.pos.x))+','+String(Math.round(me.pos.y))+')'\n        ctx.fillText(text,100,200)\n    }\n}\n\nfunction defaultMap(ctx){\n    ctx.StrokeStyle='black'\n    ctx.fillStyle='black'\n    ctx.beginPath()\n    ctx.moveTo(0, 0);\n    ctx.lineTo(canvas_size, 0);\n    ctx.lineTo(canvas_size,canvas_size);\n    ctx.lineTo(0, canvas_size);\n    ctx.lineTo(0,0);\n    ctx.closePath();\n    ctx.arc(center_w,center_h,400,0,Math.PI*2,true);\n    ctx.closePath();\n    ctx.fill();\n}\n\nfunction drawItem(ctx,me,i){\n    var circle = new Path2D();\n    let dpos = i.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    circle.arc(x, y, i.r, 0, 2 * Math.PI);\n    ctx.fillStyle=i.color;\n    ctx.strokeStyle='black';\n    ctx.lineWidth=0.5;\n    ctx.fill(circle);\n    ctx.stroke(circle);\n}\n\nfunction drawPlayer(ctx,me,p){\n    if(me.id == p.id){p=me}\n    var circle = new Path2D();\n    let dpos = p.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    circle.arc(x, y, p.r, 0, 2 * Math.PI);\n    ctx.fillStyle=p.color;\n    if(me.id == p.id)ctx.fillStyle='red';\n    ctx.strokeStyle='black';\n    ctx.lineWidth=1;\n    ctx.fill(circle);\n    ctx.stroke(circle);\n    drawSword(ctx,me,p)\n    drawString(ctx,me,p)\n    drawHealthbar(ctx,me,p)\n}\n\nfunction drawHealthbar(ctx,me,p){\n    let dpos = p.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    ctx.strokeStyle = '#77FF77'\n    ctx.fillStyle = '#77FF77'\n    ctx.lineWidth=2;\n    ctx.fillRect(x-p.r,y+p.r+3,2*p.r*p.hp/p.hpmax,10)\n    ctx.strokeStyle = '#77FF77'\n    ctx.fillStyle = \"rgba(0, 0, 0, 0.2)\";\n    ctx.fillRect(x-p.r,y+p.r+3,2*p.r,10)\n}\n\nfunction drawSword(ctx,me,p){\n    const angle = -p.sw_angle;\n    let dpos = p.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    const r = p.r+p.sw_r,w=p.sw_w,h=p.sw_h;\n    ctx.save();\n        ctx.translate(x,y);\n        ctx.rotate(angle);\n        ctx.drawImage(img,-w/2,-r-h/2,w,h);\n    ctx.restore();\n}\n\nfunction drawString(ctx,me,p){\n    let dpos = p.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    ctx.fillStyle='black';\n    if(me.id == p.id)ctx.fillStyle='white';\n    ctx.font = String(p.r*15/25)+'px Dosis-Bold';\n    let text = p.name\n    let width = ctx.measureText(text).width;\n    ctx.fillText(text,x-(width/2),y+(p.r*5/25))\n\n    ctx.font = String(Math.max(10,p.r*10/25))+'px Dosis-ExtraBold';\n    text = String(p.lv)+' lv'\n    width = ctx.measureText(text).width;\n    ctx.fillText(text,x-(width/2),y+(p.r*18/25))\n\n}\n\nexport default draw;"]},"metadata":{},"sourceType":"module"}