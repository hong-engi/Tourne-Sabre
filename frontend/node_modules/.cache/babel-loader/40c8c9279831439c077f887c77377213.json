{"ast":null,"code":"var _jsxFileName = \"/Users/hong-eungi/git/tourne-sabre/frontend/src/canvas.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport draw from './mapdraw.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Canvas = props => {\n  _s();\n\n  const handleKeyDown = event => {\n    console.log('A key was pressed', event.keyCode);\n  };\n\n  React.useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown); // cleanup this component\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n  let pressedKeys = {};\n\n  function handleKeyPress(event) {\n    if (pressedKeys[\"KeyW\"]) {\n      props.player.move(0, -10);\n      console.log('w pressed');\n    }\n\n    if (pressedKeys[\"KeyA\"]) {\n      props.player.move(-10, 0);\n      console.log('a pressed');\n    }\n\n    if (pressedKeys[\"KeyS\"]) {\n      props.player.move(0, 10);\n      console.log('s pressed');\n    }\n\n    if (pressedKeys[\"KeyD\"]) {\n      props.player.move(10, 0);\n      console.log('d pressed');\n    }\n  }\n\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let frameCount = 0;\n    let animationFrameId;\n\n    const render = () => {\n      frameCount++;\n      props.player.sw_angle += props.player.sw_speed;\n      draw(ctx, props.player);\n      animationFrameId = window.requestAnimationFrame(render);\n    };\n\n    render();\n    return () => {\n      window.cancelAnimationFrame(animationFrameId);\n    };\n  }, [draw]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    ...props,\n    tabIndex: \"0\",\n    onKeyPress: handleKeyPress\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Canvas, \"F+WBYqQcIoACjArHNHXlaCGvnfE=\");\n\n_c = Canvas;\nexport default Canvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"sources":["/Users/hong-eungi/git/tourne-sabre/frontend/src/canvas.js"],"names":["React","useRef","useEffect","draw","Canvas","props","handleKeyDown","event","console","log","keyCode","window","addEventListener","removeEventListener","pressedKeys","handleKeyPress","player","move","canvasRef","canvas","current","ctx","getContext","frameCount","animationFrameId","render","sw_angle","sw_speed","requestAnimationFrame","cancelAnimationFrame"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,cAAjB;;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AAAA;;AACtB,QAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,KAAK,CAACG,OAAvC;AACD,GAFD;;AAIAV,EAAAA,KAAK,CAACE,SAAN,CAAgB,MAAM;AACpBS,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCN,aAAnC,EADoB,CAGpB;;AACA,WAAO,MAAM;AACXK,MAAAA,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsCP,aAAtC;AACD,KAFD;AAGD,GAPD,EAOG,EAPH;AAQA,MAAIQ,WAAW,GAAG,EAAlB;;AACE,WAASC,cAAT,CAAwBR,KAAxB,EAA8B;AAC1B,QAAGO,WAAW,CAAC,MAAD,CAAd,EAAuB;AACrBT,MAAAA,KAAK,CAACW,MAAN,CAAaC,IAAb,CAAkB,CAAlB,EAAoB,CAAC,EAArB;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;;AACD,QAAGK,WAAW,CAAC,MAAD,CAAd,EAAuB;AACrBT,MAAAA,KAAK,CAACW,MAAN,CAAaC,IAAb,CAAkB,CAAC,EAAnB,EAAsB,CAAtB;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;;AACD,QAAGK,WAAW,CAAC,MAAD,CAAd,EAAuB;AACrBT,MAAAA,KAAK,CAACW,MAAN,CAAaC,IAAb,CAAkB,CAAlB,EAAoB,EAApB;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;;AACD,QAAGK,WAAW,CAAC,MAAD,CAAd,EAAuB;AACrBT,MAAAA,KAAK,CAACW,MAAN,CAAaC,IAAb,CAAkB,EAAlB,EAAqB,CAArB;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;AACJ;;AACD,QAAMS,SAAS,GAAGjB,MAAM,CAAC,IAAD,CAAxB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAEhB,UAAMiB,MAAM,GAAGD,SAAS,CAACE,OAAzB;AACA,UAAMC,GAAG,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAZ;AACA,QAAIC,UAAU,GAAG,CAAjB;AACA,QAAIC,gBAAJ;;AAEA,UAAMC,MAAM,GAAG,MAAM;AACnBF,MAAAA,UAAU;AACVlB,MAAAA,KAAK,CAACW,MAAN,CAAaU,QAAb,IAAuBrB,KAAK,CAACW,MAAN,CAAaW,QAApC;AACAxB,MAAAA,IAAI,CAACkB,GAAD,EAAMhB,KAAK,CAACW,MAAZ,CAAJ;AACAQ,MAAAA,gBAAgB,GAAGb,MAAM,CAACiB,qBAAP,CAA6BH,MAA7B,CAAnB;AACD,KALD;;AAMAA,IAAAA,MAAM;AAEJ,WAAO,MAAM;AACXd,MAAAA,MAAM,CAACkB,oBAAP,CAA4BL,gBAA5B;AACD,KAFD;AAGD,GAlBQ,EAkBN,CAACrB,IAAD,CAlBM,CAAT;AAoBF,sBAAO;AAAQ,IAAA,GAAG,EAAEe,SAAb;AAAA,OAA4Bb,KAA5B;AAAmC,IAAA,QAAQ,EAAC,GAA5C;AAAgD,IAAA,UAAU,EAAEU;AAA5D;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAvDD;;GAAMX,M;;KAAAA,M;AAyDN,eAAeA,MAAf","sourcesContent":["import React, { useRef, useEffect } from 'react'\nimport draw from './mapdraw.js'\n\nconst Canvas = props => {\n  const handleKeyDown = (event) => {\n    console.log('A key was pressed', event.keyCode);\n  };\n\n  React.useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    // cleanup this component\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n  let pressedKeys = {};\n    function handleKeyPress(event){\n        if(pressedKeys[\"KeyW\"]){\n          props.player.move(0,-10);\n          console.log('w pressed')\n        }\n        if(pressedKeys[\"KeyA\"]){\n          props.player.move(-10,0);\n          console.log('a pressed')\n        }\n        if(pressedKeys[\"KeyS\"]){\n          props.player.move(0,10);\n          console.log('s pressed')\n        }\n        if(pressedKeys[\"KeyD\"]){\n          props.player.move(10,0);\n          console.log('d pressed')\n        }\n    }\n    const canvasRef = useRef(null)\n  \n    useEffect(() => {\n    \n    const canvas = canvasRef.current\n    const ctx = canvas.getContext('2d')\n    let frameCount = 0\n    let animationFrameId\n    \n    const render = () => {\n      frameCount++;\n      props.player.sw_angle+=props.player.sw_speed;\n      draw(ctx, props.player)\n      animationFrameId = window.requestAnimationFrame(render)\n    }\n    render()\n    \n      return () => {\n        window.cancelAnimationFrame(animationFrameId)\n      }\n    }, [draw])\n  \n  return <canvas ref={canvasRef} {...props} tabIndex=\"0\" onKeyPress={handleKeyPress}/>\n}\n\nexport default Canvas"]},"metadata":{},"sourceType":"module"}