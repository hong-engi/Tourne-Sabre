{"ast":null,"code":"import sword from './sword.png';\nimport { map } from './map.js';\nimport { Pos, Player, Item } from './object.js';\nconst canvas_size = 1200;\nconst center_h = canvas_size / 2;\nconst center_w = canvas_size / 2;\nvar img = new Image();\nimg.src = sword; //todo : canvas.width,canvas.height??\n\nfunction draw(ctx, player) {\n  ctx.fillStyle = 'white';\n  ctx.fillRect(0, 0, canvas_size, canvas_size);\n  ctx.StrokeStyle = 'black';\n  ctx.fillStyle = 'black';\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(canvas_size, 0);\n  ctx.lineTo(200 + org.x, 200 + org.y);\n  ctx.lineTo(0 + org.x, 200 + org.y);\n  ctx.lineTo(0 + org.x, 0 + org.y);\n  ctx.arc(center_w, center_h, 400, 0, Math.PI * 2, true); // outer (unfills it)\n\n  ctx.fill();\n  ctx.fillRect(0, 0, canvas_size, canvas_size);\n  defaultMap(ctx);\n\n  for (let i = 0; i < map.itemList.length; i++) {\n    let item = Item.schemaItem(map.itemList[i]);\n\n    if (player.pos.dist(item.pos) < 400 - item.r) {\n      drawItem(ctx, player, item);\n    }\n  }\n\n  for (let i = 0; i < map.playerList.length; i++) {\n    let player2 = Player.schemaPlayer(map.playerList[i]);\n\n    if (player.pos.dist(player2.pos) < 400 - player2.r) {\n      drawPlayer(ctx, player, player2);\n    }\n  }\n}\n\nfunction defaultMap(ctx) {\n  var circle = new Path2D();\n  circle.arc(center_h, center_w, 400, 0, 2 * Math.PI);\n  ctx.fillStyle = 'white';\n  ctx.strokeStyle = 'gray';\n  ctx.lineWidth = 5;\n  ctx.fill(circle);\n  ctx.stroke(circle);\n}\n\nfunction drawItem(ctx, me, i) {\n  var circle = new Path2D();\n  let dpos = i.pos.addv(me.pos, -1),\n      x = center_w + dpos.x,\n      y = center_h + dpos.y;\n  circle.arc(x, y, i.r, 0, 2 * Math.PI);\n  ctx.fillStyle = i.color;\n  ctx.strokeStyle = 'black';\n  ctx.lineWidth = 0.5;\n  ctx.fill(circle);\n  ctx.stroke(circle);\n}\n\nfunction drawPlayer(ctx, me, p) {\n  var circle = new Path2D();\n  let dpos = p.pos.addv(me.pos, -1),\n      x = center_w + dpos.x,\n      y = center_h + dpos.y;\n\n  if (me.id == p.id) {\n    x = center_w;\n    y = center_h;\n  }\n\n  circle.arc(x, y, p.r, 0, 2 * Math.PI);\n  ctx.fillStyle = p.color;\n  if (me.id == p.id) ctx.fillStyle = 'red';\n  ctx.strokeStyle = 'black';\n  ctx.lineWidth = 1;\n  ctx.fill(circle);\n  ctx.stroke(circle);\n  drawSword(ctx, me, p);\n  drawString(ctx, me, p, center_h, center_w);\n}\n\nfunction drawSword(ctx, me, p) {\n  const angle = -p.sw_angle;\n  let dpos = p.pos.addv(me.pos, -1),\n      x = center_w + dpos.x,\n      y = center_h + dpos.y;\n\n  if (me.id == p.id) {\n    x = center_w;\n    y = center_h;\n  }\n\n  const r = p.sw_r,\n        w = p.sw_w,\n        h = p.sw_h;\n  ctx.save();\n  ctx.translate(x, y);\n  ctx.rotate(angle);\n  ctx.drawImage(img, -w / 2, -r - h / 2, w, h);\n  ctx.restore();\n}\n\nfunction drawString(ctx, me, p) {\n  let dpos = p.pos.addv(me.pos, -1),\n      x = center_w + dpos.x,\n      y = center_h + dpos.y;\n\n  if (me.id == p.id) {\n    x = center_w;\n    y = center_h;\n  }\n\n  ctx.fillStyle = 'black';\n  if (me.id == p.id) ctx.fillStyle = 'white';\n  ctx.font = '15px Dosis-Bold';\n  let text = p.name;\n  let width = ctx.measureText(text).width;\n  ctx.fillText(text, x - width / 2, y + 5);\n}\n\nexport default draw;","map":{"version":3,"sources":["/Users/hong-eungi/git/tourne-sabre/frontend/src/mapdraw.js"],"names":["sword","map","Pos","Player","Item","canvas_size","center_h","center_w","img","Image","src","draw","ctx","player","fillStyle","fillRect","StrokeStyle","beginPath","moveTo","lineTo","org","x","y","arc","Math","PI","fill","defaultMap","i","itemList","length","item","schemaItem","pos","dist","r","drawItem","playerList","player2","schemaPlayer","drawPlayer","circle","Path2D","strokeStyle","lineWidth","stroke","me","dpos","addv","color","p","id","drawSword","drawString","angle","sw_angle","sw_r","w","sw_w","h","sw_h","save","translate","rotate","drawImage","restore","font","text","name","width","measureText","fillText"],"mappings":"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","sourcesContent":["import sword from './sword.png'\nimport {map} from './map.js'\nimport {Pos, Player, Item} from './object.js'\nconst canvas_size = 1200;\nconst center_h = canvas_size/2;\nconst center_w = canvas_size/2;\n\nvar img = new Image();\nimg.src = sword; \n\n//todo : canvas.width,canvas.height??\nfunction draw(ctx,player) {\n    ctx.fillStyle='white'\n    ctx.fillRect(0,0,canvas_size,canvas_size);\n    ctx.StrokeStyle='black'\n    ctx.fillStyle='black'\n    ctx.beginPath()\n    ctx.moveTo(0, 0);\n    ctx.lineTo(canvas_size, 0);\n    ctx.lineTo(200+org.x, 200+org.y);\n    ctx.lineTo(0+org.x, 200+org.y);\n    ctx.lineTo(0+org.x, 0+org.y);\n    ctx.arc(center_w,center_h,400,0,Math.PI*2, true); // outer (unfills it)\n    ctx.fill();\n    ctx.fillRect(0,0,canvas_size,canvas_size);\n    defaultMap(ctx)\n\n    for(let i=0;i<map.itemList.length;i++){\n        let item = Item.schemaItem(map.itemList[i])\n        if(player.pos.dist(item.pos)<400-item.r){\n            drawItem(ctx,player,item)\n        }\n    }\n\n    for(let i=0;i<map.playerList.length;i++){\n        let player2 = Player.schemaPlayer(map.playerList[i])\n        if(player.pos.dist(player2.pos)<400-player2.r){\n            drawPlayer(ctx,player,player2)\n        }\n    }\n}\n\nfunction defaultMap(ctx){\n    var circle = new Path2D();\n    circle.arc(center_h, center_w, 400, 0, 2 * Math.PI);\n    ctx.fillStyle='white';\n    ctx.strokeStyle='gray';\n    ctx.lineWidth=5;\n    ctx.fill(circle);\n    ctx.stroke(circle);\n}\n\nfunction drawItem(ctx,me,i){\n    var circle = new Path2D();\n    let dpos = i.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    circle.arc(x, y, i.r, 0, 2 * Math.PI);\n    ctx.fillStyle=i.color;\n    ctx.strokeStyle='black';\n    ctx.lineWidth=0.5;\n    ctx.fill(circle);\n    ctx.stroke(circle);\n}\n\nfunction drawPlayer(ctx,me,p){\n    var circle = new Path2D();\n    let dpos = p.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    if(me.id == p.id){x=center_w;y=center_h;}\n    circle.arc(x, y, p.r, 0, 2 * Math.PI);\n    ctx.fillStyle=p.color;\n    if(me.id == p.id)ctx.fillStyle='red';\n    ctx.strokeStyle='black';\n    ctx.lineWidth=1;\n    ctx.fill(circle);\n    ctx.stroke(circle);\n    drawSword(ctx,me,p)\n    drawString(ctx,me,p,center_h,center_w)\n}\n\nfunction drawSword(ctx,me,p){\n    const angle = -p.sw_angle;\n    let dpos = p.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    if(me.id == p.id){x=center_w;y=center_h;}\n    const r = p.sw_r,w=p.sw_w,h=p.sw_h;\n    ctx.save();\n    ctx.translate(x,y);\n    ctx.rotate(angle);\n    ctx.drawImage(img,-w/2,-r-h/2,w,h);\n    ctx.restore();\n}\n\nfunction drawString(ctx,me,p){\n    let dpos = p.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    if(me.id == p.id){x=center_w;y=center_h;}\n    ctx.fillStyle='black';\n    if(me.id == p.id)ctx.fillStyle='white';\n    ctx.font = '15px Dosis-Bold';\n    let text = p.name\n    let width = ctx.measureText(text).width;\n    ctx.fillText(text,x-(width/2),y+5)\n}\n\nexport default draw;"]},"metadata":{},"sourceType":"module"}