{"ast":null,"code":"import sword from './sword.png';\nimport { map } from './map.js';\nimport { Pos, Player, Item } from './object.js';\nconst canvas_size = 1200;\nconst center_h = canvas_size / 2;\nconst center_w = canvas_size / 2;\nvar img = new Image();\nimg.src = sword; //todo : canvas.width,canvas.height??\n\nfunction draw(ctx, player) {\n  ctx.StrokeStyle = 'black';\n  ctx.fillStyle = 'black';\n  ctx.fillRect(0, 0, canvas_size, canvas_size);\n  defaultMap(ctx);\n  console.log(map.itemList);\n\n  for (let i = 0; i < map.itemList.length; i++) {\n    let item = Item.schemaItem(map.itemList[i]);\n\n    if (player.pos.dist(item.pos) < 400 - item.r) {\n      drawItem(ctx, player, item);\n    }\n  }\n\n  for (let i = 0; i < map.playerList.length; i++) {\n    let player2 = Player.schemaPlayer(map.playerList[i]);\n\n    if (player.pos.dist(player2.pos) < 400 - player2.r) {\n      drawPlayer(ctx, player, player2);\n      console.log(player2.pos.x, player2.pos.y);\n    }\n  }\n}\n\nfunction defaultMap(ctx) {\n  var circle = new Path2D();\n  circle.arc(center_h, center_w, 400, 0, 2 * Math.PI);\n  ctx.fillStyle = 'white';\n  ctx.strokeStyle = 'gray';\n  ctx.lineWidth = 5;\n  ctx.fill(circle);\n  ctx.stroke(circle);\n}\n\nfunction drawItem(ctx, me, i) {\n  var circle = new Path2D();\n  let dpos = i.pos.addv(me.pos, -1),\n      x = center_w + dpos.x,\n      y = center_h + dpos.y;\n  circle.arc(x, y, i.r, 0, 2 * Math.PI);\n  ctx.fillStyle = i.color;\n  ctx.strokeStyle = 'black';\n  ctx.lineWidth = 0.5;\n  ctx.fill(circle);\n  ctx.stroke(circle);\n}\n\nfunction drawPlayer(ctx, me, p) {\n  var circle = new Path2D();\n  let dpos = p.pos.addv(me.pos, -1),\n      x = center_w + dpos.x,\n      y = center_h + dpos.y;\n  circle.arc(x, y, p.r, 0, 2 * Math.PI);\n  ctx.fillStyle = p.color;\n  if (me === p) ctx.fillStyle = 'red';\n  ctx.strokeStyle = 'black';\n  ctx.lineWidth = 1;\n  ctx.fill(circle);\n  ctx.stroke(circle);\n  drawSword(ctx, me, p);\n  drawString(ctx, me, p, center_h, center_w);\n}\n\nfunction drawSword(ctx, me, p) {\n  const angle = -p.sw_angle;\n  let dpos = p.pos.addv(me.pos, -1),\n      x = center_w + dpos.x,\n      y = center_h + dpos.y;\n  const r = p.sw_r,\n        w = p.sw_w,\n        h = p.sw_h;\n  ctx.save();\n  ctx.translate(x, y);\n  ctx.rotate(angle);\n  ctx.drawImage(img, -w / 2, -r - h / 2, w, h);\n  ctx.restore();\n}\n\nfunction drawString(ctx, me, p) {\n  let dpos = p.pos.addv(me.pos, -1),\n      x = center_w + dpos.x,\n      y = center_h + dpos.y;\n  ctx.fillStyle = 'black';\n  if (me === p) ctx.fillStyle = 'white';\n  ctx.font = '15px Dosis-Bold';\n  let text = p.name;\n  let width = ctx.measureText(text).width;\n  ctx.fillText(text, x - width / 2, y + 5);\n}\n\nexport default draw;","map":{"version":3,"sources":["/Users/hong-eungi/git/tourne-sabre/frontend/src/mapdraw.js"],"names":["sword","map","Pos","Player","Item","canvas_size","center_h","center_w","img","Image","src","draw","ctx","player","StrokeStyle","fillStyle","fillRect","defaultMap","console","log","itemList","i","length","item","schemaItem","pos","dist","r","drawItem","playerList","player2","schemaPlayer","drawPlayer","x","y","circle","Path2D","arc","Math","PI","strokeStyle","lineWidth","fill","stroke","me","dpos","addv","color","p","drawSword","drawString","angle","sw_angle","sw_r","w","sw_w","h","sw_h","save","translate","rotate","drawImage","restore","font","text","name","width","measureText","fillText"],"mappings":"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","sourcesContent":["import sword from './sword.png'\nimport {map} from './map.js'\nimport {Pos, Player, Item} from './object.js'\nconst canvas_size = 1200;\nconst center_h = canvas_size/2;\nconst center_w = canvas_size/2;\n\nvar img = new Image();\nimg.src = sword; \n\n//todo : canvas.width,canvas.height??\nfunction draw(ctx,player) {\n    ctx.StrokeStyle='black'\n    ctx.fillStyle='black'\n    ctx.fillRect(0,0,canvas_size,canvas_size);\n    defaultMap(ctx)\n\n    console.log(map.itemList)\n    for(let i=0;i<map.itemList.length;i++){\n        let item = Item.schemaItem(map.itemList[i])\n        if(player.pos.dist(item.pos)<400-item.r){\n            drawItem(ctx,player,item)\n        }\n    }\n\n    for(let i=0;i<map.playerList.length;i++){\n        let player2 = Player.schemaPlayer(map.playerList[i])\n        if(player.pos.dist(player2.pos)<400-player2.r){\n            drawPlayer(ctx,player,player2)\n            console.log(player2.pos.x,player2.pos.y)\n        }\n    }\n}\n\nfunction defaultMap(ctx){\n    var circle = new Path2D();\n    circle.arc(center_h, center_w, 400, 0, 2 * Math.PI);\n    ctx.fillStyle='white';\n    ctx.strokeStyle='gray';\n    ctx.lineWidth=5;\n    ctx.fill(circle);\n    ctx.stroke(circle);\n}\n\nfunction drawItem(ctx,me,i){\n    var circle = new Path2D();\n    let dpos = i.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    circle.arc(x, y, i.r, 0, 2 * Math.PI);\n    ctx.fillStyle=i.color;\n    ctx.strokeStyle='black';\n    ctx.lineWidth=0.5;\n    ctx.fill(circle);\n    ctx.stroke(circle);\n}\n\nfunction drawPlayer(ctx,me,p){\n    var circle = new Path2D();\n    let dpos = p.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    circle.arc(x, y, p.r, 0, 2 * Math.PI);\n    ctx.fillStyle=p.color;\n    if(me === p)ctx.fillStyle='red';\n    ctx.strokeStyle='black';\n    ctx.lineWidth=1;\n    ctx.fill(circle);\n    ctx.stroke(circle);\n    drawSword(ctx,me,p)\n    drawString(ctx,me,p,center_h,center_w)\n}\n\nfunction drawSword(ctx,me,p){\n    const angle = -p.sw_angle;\n    let dpos = p.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    const r = p.sw_r,w=p.sw_w,h=p.sw_h;\n    ctx.save();\n    ctx.translate(x,y);\n    ctx.rotate(angle);\n    ctx.drawImage(img,-w/2,-r-h/2,w,h);\n    ctx.restore();\n}\n\nfunction drawString(ctx,me,p){\n    let dpos = p.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    ctx.fillStyle='black';\n    if(me === p)ctx.fillStyle='white';\n    ctx.font = '15px Dosis-Bold';\n    let text = p.name\n    let width = ctx.measureText(text).width;\n    ctx.fillText(text,x-(width/2),y+5)\n}\n\nexport default draw;"]},"metadata":{},"sourceType":"module"}