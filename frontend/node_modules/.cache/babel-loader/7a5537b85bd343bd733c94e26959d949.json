{"ast":null,"code":"import sword from './sword.png';\nconst map_size = 1200;\nconst center_h = map_size / 2;\nconst center_w = map_size / 2; //todo : canvas.width,canvas.height??\n\nfunction draw(ctx, player, n) {\n  defaultMap(ctx);\n  drawPlayer(ctx, player, n);\n  player.sw_rot(1 * (2 * Math.PI / 180));\n}\n\nfunction defaultMap(ctx) {\n  var circle = new Path2D();\n  circle.arc(center_h, center_w, 400, 0, 2 * Math.PI);\n  ctx.fillStyle = 'white';\n  ctx.strokeStyle = 'gray';\n  ctx.lineWidth = 5;\n  ctx.fill(circle);\n  ctx.stroke(circle);\n}\n\nfunction drawPlayer(ctx, p, n) {\n  var circle = new Path2D();\n  circle.arc(center_h, center_w, p.r, 0, 2 * Math.PI);\n  ctx.fillStyle = 'red';\n  ctx.strokeStyle = 'black';\n  ctx.lineWidth = 3;\n  ctx.fill(circle);\n  ctx.stroke(circle);\n  drawSword(ctx, p, img, n); //drawSword(ctx,p);\n\n  drawString(ctx, p.name, center_h, center_w);\n}\n\nfunction drawSword(ctx, p, img, n) {\n  const angle = -p.sw_angle;\n  const r = p.sw_r,\n        w = p.sw_w,\n        h = p.sw_h;\n  ctx.save();\n  ctx.translate(center_w, center_h);\n  ctx.rotate(angle);\n  var img = new Image();\n\n  img.onload = function () {};\n\n  img.src = sword;\n  console.log('loadedsword', n, new Date().getMilliseconds()); //ctx.fillRect(0-w/2,-r-h/2,w,h);\n\n  ctx.restore();\n}\n\nfunction drawString(ctx, text, x, y) {\n  ctx.fillStyle = 'black';\n  ctx.font = '15px Dosis-Bold';\n  let width = ctx.measureText(text).width;\n  ctx.fillText(text, x - width / 2, y + 5);\n}\n\nexport default draw;","map":{"version":3,"sources":["/Users/hong-eungi/git/tourne-sabre/frontend/src/mapdraw.js"],"names":["sword","map_size","center_h","center_w","draw","ctx","player","n","defaultMap","drawPlayer","sw_rot","Math","PI","circle","Path2D","arc","fillStyle","strokeStyle","lineWidth","fill","stroke","p","r","drawSword","img","drawString","name","angle","sw_angle","sw_r","w","sw_w","h","sw_h","save","translate","rotate","Image","onload","src","console","log","Date","getMilliseconds","restore","text","x","y","font","width","measureText","fillText"],"mappings":"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","sourcesContent":["import sword from './sword.png'\nconst map_size = 1200;\nconst center_h = map_size/2;\nconst center_w = map_size/2;\n//todo : canvas.width,canvas.height??\nfunction draw(ctx,player,n) {\n    defaultMap(ctx)\n    drawPlayer(ctx,player,n);\n    player.sw_rot(1*(2*Math.PI/180))\n}\n\nfunction defaultMap(ctx){\n    var circle = new Path2D();\n    circle.arc(center_h, center_w, 400, 0, 2 * Math.PI);\n    ctx.fillStyle='white';\n    ctx.strokeStyle='gray';\n    ctx.lineWidth=5;\n    ctx.fill(circle);\n    ctx.stroke(circle);\n}\n\nfunction drawPlayer(ctx,p,n){\n    var circle = new Path2D();\n    circle.arc(center_h, center_w, p.r, 0, 2 * Math.PI);\n    ctx.fillStyle='red';\n    ctx.strokeStyle='black';\n    ctx.lineWidth=3;\n    ctx.fill(circle);\n    ctx.stroke(circle);\n    drawSword(ctx,p,img,n)\n    //drawSword(ctx,p);\n    drawString(ctx,p.name,center_h,center_w)\n}\n\nfunction drawSword(ctx,p,img,n){\n    const angle = -p.sw_angle;\n    const r = p.sw_r,w=p.sw_w,h=p.sw_h;\n    ctx.save();\n    ctx.translate(center_w,center_h);\n    ctx.rotate(angle);\n    var img = new Image();\n    img.onload = function(){\n    }\n    img.src = sword; \n    console.log('loadedsword',n,new Date().getMilliseconds())\n    //ctx.fillRect(0-w/2,-r-h/2,w,h);\n    ctx.restore();\n}\n\nfunction drawString(ctx,text,x,y){\n    ctx.fillStyle='black';\n    ctx.font = '15px Dosis-Bold';\n    let width = ctx.measureText(text).width;\n    ctx.fillText(text,x-(width/2),y+5)\n}\n\nexport default draw;"]},"metadata":{},"sourceType":"module"}