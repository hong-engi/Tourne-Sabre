{"ast":null,"code":"import sword from './sword.png';\nimport { map } from './map.js';\nimport { Pos, Player, Item } from './object.js';\nconst canvas_size = 1200;\nconst center_h = canvas_size / 2;\nconst center_w = canvas_size / 2;\nvar img = new Image();\nimg.src = sword; //todo : canvas.width,canvas.height??\n\nfunction draw(ctx, player) {\n  ctx.StrokeStyle = 'black';\n  ctx.fillStyle = 'black';\n  ctx.fillRect(0, 0, canvas_size, canvas_size);\n  defaultMap(ctx); // for(let i=0;i<map.itemList.length;i++){\n  //     let item = Item.schemaItem(map.itemList[i])\n  //     if(item.pos.dist(player.pos)<400-item.r)\n  //         drawItem(ctx,player,map.item)\n  // }\n  // for(let i=0;i<map.playerList.length;i++){\n  //     let player2 = Player.schemaPlayer(map.playerList[i])\n  //     if(player.pos.dist(player2.pos)<400-player2.r)\n  //         drawPlayer(ctx,player,map.player2)\n  // }\n}\n\nfunction defaultMap(ctx) {\n  var circle = new Path2D();\n  circle.arc(center_h, center_w, 400, 0, 2 * Math.PI);\n  ctx.fillStyle = 'white';\n  ctx.strokeStyle = 'gray';\n  ctx.lineWidth = 5;\n  ctx.fill(circle);\n  ctx.stroke(circle);\n}\n\nfunction drawItem(ctx, me, i) {\n  var circle = new Path2D();\n  let dpos = i.pos.addv(me.pos, -1),\n      x = center_w + dpos.x,\n      y = center_h + dpos.y;\n  circle.arc(x, y, i.r, 0, 2 * Math.PI);\n  ctx.fillStyle = i.color;\n  ctx.strokeStyle = 'black';\n  ctx.lineWidth = 0.5;\n  ctx.fill(circle);\n  ctx.stroke(circle);\n}\n\nfunction drawPlayer(ctx, me, p) {\n  var circle = new Path2D();\n  console.log(p);\n  let dpos = p.pos.addv(me.pos, -1),\n      x = center_w + dpos.x,\n      y = center_h + dpos.y;\n  circle.arc(x, y, p.r, 0, 2 * Math.PI);\n  ctx.fillStyle = p.color;\n  if (me === p) ctx.fillStyle = 'red';\n  ctx.strokeStyle = 'black';\n  ctx.lineWidth = 1;\n  ctx.fill(circle);\n  ctx.stroke(circle);\n  drawSword(ctx, me, p);\n  drawString(ctx, me, p, center_h, center_w);\n}\n\nfunction drawSword(ctx, me, p) {\n  const angle = -p.sw_angle;\n  let dpos = p.pos.addv(me.pos, -1),\n      x = center_w + dpos.x,\n      y = center_h + dpos.y;\n  const r = p.sw_r,\n        w = p.sw_w,\n        h = p.sw_h;\n  ctx.save();\n  ctx.translate(x, y);\n  ctx.rotate(angle);\n  ctx.drawImage(img, -w / 2, -r - h / 2, w, h);\n  ctx.restore();\n}\n\nfunction drawString(ctx, me, p) {\n  let dpos = p.pos.addv(me.pos, -1),\n      x = center_w + dpos.x,\n      y = center_h + dpos.y;\n  ctx.fillStyle = 'black';\n  if (me === p) ctx.fillStyle = 'white';\n  ctx.font = '15px Dosis-Bold';\n  let text = p.name;\n  let width = ctx.measureText(text).width;\n  ctx.fillText(text, x - width / 2, y + 5);\n}\n\nexport default draw;","map":{"version":3,"sources":["/Users/hong-eungi/git/tourne-sabre/frontend/src/mapdraw.js"],"names":["sword","map","Pos","Player","Item","canvas_size","center_h","center_w","img","Image","src","draw","ctx","player","StrokeStyle","fillStyle","fillRect","defaultMap","circle","Path2D","arc","Math","PI","strokeStyle","lineWidth","fill","stroke","drawItem","me","i","dpos","pos","addv","x","y","r","color","drawPlayer","p","console","log","drawSword","drawString","angle","sw_angle","sw_r","w","sw_w","h","sw_h","save","translate","rotate","drawImage","restore","font","text","name","width","measureText","fillText"],"mappings":"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","sourcesContent":["import sword from './sword.png'\nimport {map} from './map.js'\nimport {Pos, Player, Item} from './object.js'\nconst canvas_size = 1200;\nconst center_h = canvas_size/2;\nconst center_w = canvas_size/2;\n\nvar img = new Image();\nimg.src = sword; \n\n//todo : canvas.width,canvas.height??\nfunction draw(ctx,player) {\n    ctx.StrokeStyle='black'\n    ctx.fillStyle='black'\n    ctx.fillRect(0,0,canvas_size,canvas_size);\n    defaultMap(ctx)\n\n    // for(let i=0;i<map.itemList.length;i++){\n    //     let item = Item.schemaItem(map.itemList[i])\n    //     if(item.pos.dist(player.pos)<400-item.r)\n    //         drawItem(ctx,player,map.item)\n    // }\n\n    // for(let i=0;i<map.playerList.length;i++){\n    //     let player2 = Player.schemaPlayer(map.playerList[i])\n    //     if(player.pos.dist(player2.pos)<400-player2.r)\n    //         drawPlayer(ctx,player,map.player2)\n    // }\n}\n\nfunction defaultMap(ctx){\n    var circle = new Path2D();\n    circle.arc(center_h, center_w, 400, 0, 2 * Math.PI);\n    ctx.fillStyle='white';\n    ctx.strokeStyle='gray';\n    ctx.lineWidth=5;\n    ctx.fill(circle);\n    ctx.stroke(circle);\n}\n\nfunction drawItem(ctx,me,i){\n    var circle = new Path2D();\n    let dpos = i.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    circle.arc(x, y, i.r, 0, 2 * Math.PI);\n    ctx.fillStyle=i.color;\n    ctx.strokeStyle='black';\n    ctx.lineWidth=0.5;\n    ctx.fill(circle);\n    ctx.stroke(circle);\n}\n\nfunction drawPlayer(ctx,me,p){\n    var circle = new Path2D();\n    console.log(p)\n    let dpos = p.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    circle.arc(x, y, p.r, 0, 2 * Math.PI);\n    ctx.fillStyle=p.color;\n    if(me === p)ctx.fillStyle='red';\n    ctx.strokeStyle='black';\n    ctx.lineWidth=1;\n    ctx.fill(circle);\n    ctx.stroke(circle);\n    drawSword(ctx,me,p)\n    drawString(ctx,me,p,center_h,center_w)\n}\n\nfunction drawSword(ctx,me,p){\n    const angle = -p.sw_angle;\n    let dpos = p.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    const r = p.sw_r,w=p.sw_w,h=p.sw_h;\n    ctx.save();\n    ctx.translate(x,y);\n    ctx.rotate(angle);\n    ctx.drawImage(img,-w/2,-r-h/2,w,h);\n    ctx.restore();\n}\n\nfunction drawString(ctx,me,p){\n    let dpos = p.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    ctx.fillStyle='black';\n    if(me === p)ctx.fillStyle='white';\n    ctx.font = '15px Dosis-Bold';\n    let text = p.name\n    let width = ctx.measureText(text).width;\n    ctx.fillText(text,x-(width/2),y+5)\n}\n\nexport default draw;"]},"metadata":{},"sourceType":"module"}