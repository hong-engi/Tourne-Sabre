{"ast":null,"code":"var mapSize = 800;\n\nclass Pos {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  static randomPos() {\n    let x = Math.random() * 2 * mapSize - mapSize;\n    let y = Math.random() * 2 * mapSize - mapSize;\n    return new Pos(x, y);\n  }\n\n  dist(v) {}\n\n  move(dx, dy) {\n    this.x += dx;\n    this.y += dy;\n  }\n\n  movev(v) {\n    this.x += v.x;\n    this.y += v.y;\n  }\n\n  add(x, y) {\n    let i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    return new Pos(this.x + x * i, this.y + y * i);\n  }\n\n  addv(v) {\n    let i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    return new Pos(this.x + v.x * i, this.y + v.y * i);\n  }\n\n  rot(center, angle) {\n    let clockwise = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    // center point, angle in radian\n    if (clockwise) angle *= -1;\n    const x = this.x - center.x;\n    const y = this.y - center.y;\n    this.x = Math.cos(angle) * x - Math.sin(angle) * y + center.x;\n    this.y = Math.sin(angle) * x + Math.cos(angle) * y + center.y;\n  }\n\n}\n\nclass Player {\n  constructor(name) {\n    this.name = name;\n    this.pos = new Pos(0, 0);\n    this.r = 25;\n    this.sw_angle = 0 * (Math.PI / 180); // sword angle\n\n    this.sw_r = 80; // sword radius\n\n    this.sw_w = 40;\n    this.sw_h = 100;\n    this.sw_speed = 4 * (Math.PI / 180);\n    this.hp = 100;\n    this.xp = 0;\n  }\n\n  static randomPlayer() {\n    function randomName() {\n      let alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n      let name = '';\n\n      for (let i = 0; i < 10; i++) name += alphabet[Math.floor(Math.random() * alphabet.length)];\n\n      return name;\n    }\n\n    let p = new Player(randomName());\n    p.pos = Pos.randomPos();\n    return p;\n  }\n\n  trytohit(enemy) {\n    let sp = this.sw_pos();\n    let w = this.sw_w;\n    let h = this.sw_h;\n\n    function pos_x_line_meet(p1, p2, p) {\n      return (p.y - p1.y) * (p.x - p2.x) / (p1.y - p2.y) + p1.x > p.x && (p.y - p1.y) * (p.y - p2.y) < 0;\n    }\n\n    function line_circle_meet(p1, p2, p, r) {\n      let a = p2.y - p1.y,\n          b = p1.x - p2.x,\n          c = p1.x * (p1.y - p2.y) + p1.y * (p2.x - p1.x);\n      let d = Math.abs(a * p.x + b * p.y + c) / Math.pow(a * a + b * b, 0.5);\n      return d < r;\n    }\n\n    let meet_cnt = 0;\n    let dir = [1, 1];\n\n    for (let i = 0; i < 4; i++) {\n      let p1 = new Pos(sp.x + w * dir[0], sp.y + h * dir[1]);\n      let p2 = new Pos(sp.x + w * dir[0], sp.y - h * dir[1]);\n      if (pos_x_line_meet(p1, p2, enemy.pos)) meet_cnt++;\n\n      if (line_circle_meet(p1, p2, enemy.pos, enemy.r)) {\n        meet_cnt = 1;\n        break;\n      }\n\n      let tmp = dir[0];\n      dir[0] = -dir[1];\n      dir[1] = tmp;\n    }\n\n    return meet_cnt % 2 === 1;\n  }\n\n  trytoeat(item) {\n    const p = this.pos;\n    const i = item.pos;\n    return Math.pow(i.x - p.x, 2) + Math.pow(i.y - p.y, 2) <= Math.pow(this.r + item.r, 2);\n  }\n\n  move(dx, dy) {\n    this.pos.move(dx, dy);\n    this.bound();\n  }\n\n  bound() {\n    if (this.x >= mapSize) this.x = mapSize;\n    if (this.y >= mapSize) this.y = mapSize;\n    if (this.x <= -mapSize) this.x = -mapSize;\n    if (this.y <= -mapSize) this.y = -mapSize;\n  }\n\n  sw_rot(angle) {\n    let clockwise = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    if (clockwise) angle *= -1;\n    this.sw_angle += angle;\n    this.sw_angle %= 2 * Math.PI;\n  }\n\n  sw_pos() {\n    return this.pos.add(this.sw_r, 0).rot(this.pos, this.sw_angle);\n  }\n\n  hp_change(dhp) {\n    this.hp += dhp;\n  }\n\n  dead() {\n    return this.hp <= 0;\n  }\n\n}\n\nfunction getRandomColor() {\n  var letters = '0123456789ABCDEF';\n  var color = '#';\n\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n\n  return color;\n}\n\nclass Item {\n  constructor(pos) {\n    this.pos = pos;\n    this.color = getRandomColor();\n    this.xp = Math.floor(Math.random() * 16) + 1;\n    this.r = Math.floor(Math.random() * 3) + 3;\n  }\n\n  static randomItem() {\n    return new Item(Pos.randomPos());\n  }\n\n  eaten(player) {\n    player.xp += this.xp;\n    this.constructor(Pos.randomPos());\n  }\n\n}\n\nexport { Player, Pos, Item };","map":{"version":3,"sources":["/Users/hong-eungi/git/tourne-sabre/frontend/src/object.js"],"names":["mapSize","Pos","constructor","x","y","randomPos","Math","random","dist","v","move","dx","dy","movev","add","i","addv","rot","center","angle","clockwise","cos","sin","Player","name","pos","r","sw_angle","PI","sw_r","sw_w","sw_h","sw_speed","hp","xp","randomPlayer","randomName","alphabet","floor","length","p","trytohit","enemy","sp","sw_pos","w","h","pos_x_line_meet","p1","p2","line_circle_meet","a","b","c","d","abs","pow","meet_cnt","dir","tmp","trytoeat","item","bound","sw_rot","hp_change","dhp","dead","getRandomColor","letters","color","Item","randomItem","eaten","player"],"mappings":"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","sourcesContent":["var mapSize = 800;\n\nclass Pos{\n    constructor(x,y){\n        this.x=x;\n        this.y=y;\n    }\n\n    static randomPos(){\n        let x = Math.random() * 2 * mapSize - mapSize;\n        let y = Math.random() * 2 * mapSize - mapSize;\n        return new Pos(x,y)\n    }\n\n    dist(v){\n        \n    }\n\n    move(dx,dy){\n        this.x+=dx;\n        this.y+=dy;\n    }\n\n    movev(v){\n        this.x+=v.x;\n        this.y+=v.y;\n    }\n    \n    add(x,y,i=1){\n        return new Pos(this.x+x*i, this.y+y*i)\n    }\n\n    addv(v,i=1){\n        return new Pos(this.x+v.x*i, this.y+v.y*i)\n    }\n\n    rot(center,angle,clockwise = true){ // center point, angle in radian\n        if(clockwise)angle*=-1;\n        const x = this.x - center.x\n        const y = this.y - center.y\n        this.x = Math.cos(angle)*x-Math.sin(angle)*y+center.x;\n        this.y = Math.sin(angle)*x+Math.cos(angle)*y+center.y;\n    }\n}\n\nclass Player{\n    constructor(name){\n        this.name = name;\n        this.pos = new Pos(0,0);\n        this.r = 25;\n        this.sw_angle = 0 * (Math.PI/180); // sword angle\n        this.sw_r = 80; // sword radius\n        this.sw_w = 40;\n        this.sw_h = 100;\n        this.sw_speed = 4 * (Math.PI/180);\n        this.hp = 100;\n        this.xp = 0;\n    }\n\n    static randomPlayer(){\n        function randomName(){\n            let alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n            let name = '';\n            for(let i=0;i<10;i++)\n                name+=alphabet[Math.floor(Math.random()*alphabet.length)]\n            return name;\n        }\n        let p = new Player(randomName())\n        p.pos = Pos.randomPos();\n        return p;\n    }\n\n    trytohit(enemy){\n        let sp = this.sw_pos();\n        let w = this.sw_w;\n        let h = this.sw_h;\n        function pos_x_line_meet(p1,p2,p){\n            return (p.y-p1.y)*(p.x-p2.x)/(p1.y-p2.y)+p1.x>p.x &&\n                (p.y-p1.y)*(p.y-p2.y)<0;\n        }\n        function line_circle_meet(p1,p2,p,r){\n            let a=p2.y-p1.y,b=p1.x-p2.x,c=p1.x*(p1.y-p2.y)+p1.y*(p2.x-p1.x);\n            let d = Math.abs(a*p.x+b*p.y+c)/Math.pow(a*a+b*b,0.5)\n            return d<r;\n        }\n        let meet_cnt = 0;\n        let dir = [1,1];\n        for(let i=0;i<4;i++){\n            let p1 = new Pos(sp.x+w*dir[0],sp.y+h*dir[1]);\n            let p2 = new Pos(sp.x+w*dir[0],sp.y-h*dir[1]);\n            if(pos_x_line_meet(p1,p2,enemy.pos))meet_cnt++;\n            if(line_circle_meet(p1,p2,enemy.pos,enemy.r)){\n                meet_cnt=1;\n                break;\n            }\n            let tmp = dir[0];\n            dir[0]=-dir[1];\n            dir[1]=tmp;\n        }\n        return meet_cnt%2 === 1\n    }\n\n    trytoeat(item){\n        const p = this.pos;\n        const i = item.pos;\n        return Math.pow(i.x-p.x,2)+Math.pow(i.y-p.y,2)<=Math.pow(this.r+item.r,2)\n    }\n\n    move(dx,dy){\n        this.pos.move(dx,dy)\n        this.bound()\n    }\n\n    bound(){\n        if(this.x>=mapSize)this.x=mapSize;\n        if(this.y>=mapSize)this.y=mapSize;\n        if(this.x<=-mapSize)this.x=-mapSize;\n        if(this.y<=-mapSize)this.y=-mapSize;\n    }\n\n    sw_rot(angle,clockwise=true){\n        if(clockwise)angle*=-1;\n        this.sw_angle+=angle;\n        this.sw_angle%=(2*Math.PI);\n    }\n\n    sw_pos(){\n        return this.pos.add(this.sw_r,0).rot(this.pos,this.sw_angle);\n    }\n\n    hp_change(dhp){\n        this.hp+=dhp;\n    }\n\n    dead(){\n        return (this.hp <= 0)\n    }\n}\n\nfunction getRandomColor() {\n    var letters = '0123456789ABCDEF';\n    var color = '#';\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n}\n\nclass Item{\n    constructor(pos){\n        this.pos = pos; \n        this.color = getRandomColor();\n        this.xp = Math.floor(Math.random() * 16)+1;\n        this.r = Math.floor(Math.random() * 3)+3;\n    }\n\n    static randomItem(){\n        return new Item(Pos.randomPos())\n    }\n\n    eaten(player){\n        player.xp+=this.xp;\n        this.constructor(Pos.randomPos())\n    }\n}\n\nexport {Player, Pos, Item}"]},"metadata":{},"sourceType":"module"}