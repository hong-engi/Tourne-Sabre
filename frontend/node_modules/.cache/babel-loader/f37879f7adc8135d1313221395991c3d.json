{"ast":null,"code":"import { Player, Item } from './object.js';\nimport { map } from './map.js';\nimport { death } from './canvas.js';\nvar ateItemid = null;\nvar killedPlayerid = null;\nvar delflag = true;\n\nfunction frameUpdate(me, pKeys, myref) {\n  if (me == null) return;\n\n  if (me.dead()) {\n    map.kill(me);\n    death(myref);\n    return;\n  }\n\n  if (pKeys['w']) me.addSpeed(0, -1);\n  if (pKeys['s']) me.addSpeed(0, 1);\n  if (pKeys['a']) me.addSpeed(-1, 0);\n  if (pKeys['d']) me.addSpeed(1, 0);\n  me.move();\n  me.sw_rot(6 * (Math.PI / 180));\n  map.getItems();\n  map.getPlayers();\n  map.playerUpdateBack(me);\n  map.playerUpdate(me);\n\n  for (let i = 0; i < map.itemList.length; i++) {\n    let item = Item.schemaItem(map.itemList[i]);\n\n    if (me.trytoeat(item) && ateItemid != item.id) {\n      ateItemid = item.id;\n      item.eaten(me);\n      map.ate(item);\n    }\n  }\n\n  for (let i = 0; i < map.playerList.length; i++) {\n    let player = Player.schemaPlayer(map.playerList[i]);\n\n    if (me.trytohit(player)) {\n      let dmg = me.lv + 5;\n      map.damage(player, dmg);\n\n      if (player.dead() && killedPlayerid != player.id) {\n        killedPlayerid = player.id;\n        me.xpup(50);\n      }\n    }\n  }\n\n  if (pKeys['q'] && pKeys['w'] && pKeys['e'] && pKeys['r'] && delflag) {\n    map.deleteAll();\n    console.log('deleteall');\n    delflag = false;\n  }\n}\n\nexport default frameUpdate;","map":{"version":3,"sources":["/Users/hong-eungi/git/tourne-sabre/frontend/src/frameUpdater.js"],"names":["Player","Item","map","death","ateItemid","killedPlayerid","delflag","frameUpdate","me","pKeys","myref","dead","kill","addSpeed","move","sw_rot","Math","PI","getItems","getPlayers","playerUpdateBack","playerUpdate","i","itemList","length","item","schemaItem","trytoeat","id","eaten","ate","playerList","player","schemaPlayer","trytohit","dmg","lv","damage","xpup","deleteAll","console","log"],"mappings":"AAAA,SAAQA,MAAR,EAAeC,IAAf,QAA0B,aAA1B;AACA,SAAQC,GAAR,QAAkB,UAAlB;AACA,SAAQC,KAAR,QAAoB,aAApB;AAEA,IAAIC,SAAS,GAAG,IAAhB;AACA,IAAIC,cAAc,GAAG,IAArB;AACA,IAAIC,OAAO,GAAG,IAAd;;AACA,SAASC,WAAT,CAAqBC,EAArB,EAAwBC,KAAxB,EAA8BC,KAA9B,EAAoC;AAClC,MAAGF,EAAE,IAAE,IAAP,EAAY;;AACZ,MAAGA,EAAE,CAACG,IAAH,EAAH,EAAa;AAACT,IAAAA,GAAG,CAACU,IAAJ,CAASJ,EAAT;AAAaL,IAAAA,KAAK,CAACO,KAAD,CAAL;AAAa;AAAO;;AAC/C,MAAGD,KAAK,CAAC,GAAD,CAAR,EAAcD,EAAE,CAACK,QAAH,CAAY,CAAZ,EAAc,CAAC,CAAf;AACd,MAAGJ,KAAK,CAAC,GAAD,CAAR,EAAcD,EAAE,CAACK,QAAH,CAAY,CAAZ,EAAc,CAAd;AACd,MAAGJ,KAAK,CAAC,GAAD,CAAR,EAAcD,EAAE,CAACK,QAAH,CAAY,CAAC,CAAb,EAAe,CAAf;AACd,MAAGJ,KAAK,CAAC,GAAD,CAAR,EAAcD,EAAE,CAACK,QAAH,CAAY,CAAZ,EAAc,CAAd;AACdL,EAAAA,EAAE,CAACM,IAAH;AACAN,EAAAA,EAAE,CAACO,MAAH,CAAU,KAAGC,IAAI,CAACC,EAAL,GAAQ,GAAX,CAAV;AACAf,EAAAA,GAAG,CAACgB,QAAJ;AACAhB,EAAAA,GAAG,CAACiB,UAAJ;AACAjB,EAAAA,GAAG,CAACkB,gBAAJ,CAAqBZ,EAArB;AACAN,EAAAA,GAAG,CAACmB,YAAJ,CAAiBb,EAAjB;;AAEA,OAAI,IAAIc,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACpB,GAAG,CAACqB,QAAJ,CAAaC,MAA3B,EAAkCF,CAAC,EAAnC,EAAsC;AACpC,QAAIG,IAAI,GAAGxB,IAAI,CAACyB,UAAL,CAAgBxB,GAAG,CAACqB,QAAJ,CAAaD,CAAb,CAAhB,CAAX;;AACA,QAAGd,EAAE,CAACmB,QAAH,CAAYF,IAAZ,KAAmBrB,SAAS,IAAIqB,IAAI,CAACG,EAAxC,EAA2C;AACzCxB,MAAAA,SAAS,GAAGqB,IAAI,CAACG,EAAjB;AACAH,MAAAA,IAAI,CAACI,KAAL,CAAWrB,EAAX;AACAN,MAAAA,GAAG,CAAC4B,GAAJ,CAAQL,IAAR;AACD;AACF;;AAED,OAAI,IAAIH,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACpB,GAAG,CAAC6B,UAAJ,CAAeP,MAA7B,EAAoCF,CAAC,EAArC,EAAwC;AACtC,QAAIU,MAAM,GAAGhC,MAAM,CAACiC,YAAP,CAAoB/B,GAAG,CAAC6B,UAAJ,CAAeT,CAAf,CAApB,CAAb;;AACA,QAAGd,EAAE,CAAC0B,QAAH,CAAYF,MAAZ,CAAH,EAAuB;AACrB,UAAIG,GAAG,GAAG3B,EAAE,CAAC4B,EAAH,GAAM,CAAhB;AACAlC,MAAAA,GAAG,CAACmC,MAAJ,CAAWL,MAAX,EAAkBG,GAAlB;;AACA,UAAGH,MAAM,CAACrB,IAAP,MAAiBN,cAAc,IAAI2B,MAAM,CAACJ,EAA7C,EAAgD;AAC9CvB,QAAAA,cAAc,GAAG2B,MAAM,CAACJ,EAAxB;AACApB,QAAAA,EAAE,CAAC8B,IAAH,CAAQ,EAAR;AACD;AACF;AACF;;AACD,MAAG7B,KAAK,CAAC,GAAD,CAAL,IAAYA,KAAK,CAAC,GAAD,CAAjB,IAAwBA,KAAK,CAAC,GAAD,CAA7B,IAAoCA,KAAK,CAAC,GAAD,CAAzC,IAAkDH,OAArD,EAA6D;AAC3DJ,IAAAA,GAAG,CAACqC,SAAJ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAnC,IAAAA,OAAO,GAAG,KAAV;AACD;AACF;;AACD,eAAeC,WAAf","sourcesContent":["import {Player,Item} from './object.js'\nimport {map} from './map.js'\nimport {death} from './canvas.js'\n\nvar ateItemid = null\nvar killedPlayerid = null\nvar delflag = true\nfunction frameUpdate(me,pKeys,myref){\n  if(me==null)return\n  if(me.dead()){map.kill(me);death(myref);return}\n  if(pKeys['w'])me.addSpeed(0,-1);\n  if(pKeys['s'])me.addSpeed(0,1);\n  if(pKeys['a'])me.addSpeed(-1,0);\n  if(pKeys['d'])me.addSpeed(1,0);\n  me.move();\n  me.sw_rot(6*(Math.PI/180))\n  map.getItems()\n  map.getPlayers()\n  map.playerUpdateBack(me)\n  map.playerUpdate(me)\n\n  for(let i=0;i<map.itemList.length;i++){\n    let item = Item.schemaItem(map.itemList[i])\n    if(me.trytoeat(item)&&ateItemid != item.id){\n      ateItemid = item.id\n      item.eaten(me)\n      map.ate(item)\n    }\n  }\n\n  for(let i=0;i<map.playerList.length;i++){\n    let player = Player.schemaPlayer(map.playerList[i])\n    if(me.trytohit(player)){\n      let dmg = me.lv+5\n      map.damage(player,dmg)\n      if(player.dead() && killedPlayerid != player.id){\n        killedPlayerid = player.id\n        me.xpup(50)\n      }\n    }\n  }\n  if(pKeys['q']&&pKeys['w']&&pKeys['e']&&pKeys['r'] && delflag){\n    map.deleteAll()\n    console.log('deleteall')\n    delflag = false\n  }\n}\nexport default frameUpdate"]},"metadata":{},"sourceType":"module"}