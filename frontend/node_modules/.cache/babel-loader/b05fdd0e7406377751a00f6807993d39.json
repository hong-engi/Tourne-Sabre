{"ast":null,"code":"var _jsxFileName = \"/Users/hong-eungi/git/tourne-sabre/frontend/src/canvas.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport draw from './mapdraw.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Canvas = props => {\n  _s();\n\n  let pressedKeys = {};\n\n  function playerMove() {\n    if (pressedKeys[\"w\"]) {\n      props.player.move(0, -10);\n      console.log('w pressed');\n    }\n\n    if (pressedKeys[\"a\"]) {\n      props.player.move(-10, 0);\n      console.log('a pressed');\n    }\n\n    if (pressedKeys[\"s\"]) {\n      props.player.move(0, 10);\n      console.log('s pressed');\n    }\n\n    if (pressedKeys[\"d\"]) {\n      props.player.move(10, 0);\n      console.log('d pressed');\n    }\n  }\n\n  function handleKeyDown(event) {\n    pressedKeys[event.key] = true;\n    console.log(event.key);\n    playerMove();\n  }\n\n  function handleKeyUp(event) {\n    delete pressedKeys[event.key];\n  }\n\n  React.useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp); // cleanup this component\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n    };\n  }, []);\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let frameCount = 0;\n    let animationFrameId;\n\n    const render = () => {\n      frameCount++;\n      props.player.sw_angle += props.player.sw_speed;\n      draw(ctx, props.player);\n      animationFrameId = window.requestAnimationFrame(render);\n    };\n\n    render();\n    return () => {\n      window.cancelAnimationFrame(animationFrameId);\n    };\n  }, [draw]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Canvas, \"F+WBYqQcIoACjArHNHXlaCGvnfE=\");\n\n_c = Canvas;\nexport default Canvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"sources":["/Users/hong-eungi/git/tourne-sabre/frontend/src/canvas.js"],"names":["React","useRef","useEffect","draw","Canvas","props","pressedKeys","playerMove","player","move","console","log","handleKeyDown","event","key","handleKeyUp","window","addEventListener","removeEventListener","canvasRef","canvas","current","ctx","getContext","frameCount","animationFrameId","render","sw_angle","sw_speed","requestAnimationFrame","cancelAnimationFrame"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react'\nimport draw from './mapdraw.js'\n\nconst Canvas = props => {\n  let pressedKeys = {};\n  function playerMove(){\n    if(pressedKeys[\"w\"]){\n      props.player.move(0,-10);\n      console.log('w pressed')\n    }\n    if(pressedKeys[\"a\"]){\n      props.player.move(-10,0);\n      console.log('a pressed')\n    }\n    if(pressedKeys[\"s\"]){\n      props.player.move(0,10);\n      console.log('s pressed')\n    }\n    if(pressedKeys[\"d\"]){\n      props.player.move(10,0);\n      console.log('d pressed')\n    }\n  }\n\n  function handleKeyDown(event){\n    pressedKeys[event.key] = true;\n    console.log(event.key)\n    playerMove();\n  } \n  function handleKeyUp(event){\n    delete pressedKeys[event.key]\n  } \n\n  React.useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup',handleKeyUp)\n    // cleanup this component\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup',handleKeyUp)\n    };\n  }, []);\n\n  const canvasRef = useRef(null)\n\n  useEffect(() => {\n  \n  const canvas = canvasRef.current\n  const ctx = canvas.getContext('2d')\n  let frameCount = 0\n  let animationFrameId\n  \n  const render = () => {\n    frameCount++;\n    props.player.sw_angle+=props.player.sw_speed;\n    draw(ctx, props.player)\n    animationFrameId = window.requestAnimationFrame(render)\n  }\n  render()\n  \n    return () => {\n      window.cancelAnimationFrame(animationFrameId)\n    }\n  }, [draw])\n  \n  return <canvas ref={canvasRef} {...props}/>\n}\n\nexport default Canvas"]},"metadata":{},"sourceType":"module"}