{"ast":null,"code":"import { Player, Item } from './object.js';\nimport { map } from './map.js';\nimport ReactDOM from 'react-dom';\nimport { Textbox } from './textbox.js';\nvar ateItemid = null;\nvar killedPlayerid = null;\nvar flag = 0;\nvar delflag = true;\n\nfunction frameUpdate(me, pKeys) {\n  if (me === null) {\n    ReactDOM.render(Textbox(), document.getElementById('entername'));\n    return;\n  }\n\n  if (me.dead()) {\n    map.kill(me);\n    me = null;\n    console.log('death isn');\n    return;\n  } else {\n    console.log('notdead', me.hp);\n  }\n\n  if (pKeys['w']) me.addSpeed(0, -1);\n  if (pKeys['s']) me.addSpeed(0, 1);\n  if (pKeys['a']) me.addSpeed(-1, 0);\n  if (pKeys['d']) me.addSpeed(1, 0);\n  me.move();\n  me.sw_rot(6 * (Math.PI / 180));\n  map.playerUpdateBack(me);\n  map.playerUpdate(me);\n  map.getItems();\n  map.getPlayers();\n\n  for (let i = 0; i < map.itemList.length; i++) {\n    let item = Item.schemaItem(map.itemList[i]);\n\n    if (me.trytoeat(item) && ateItemid != item.id) {\n      ateItemid = item.id;\n      item.eaten(me);\n      map.ate(item);\n    }\n  }\n\n  for (let i = 0; i < map.playerList.length; i++) {\n    let player = Player.schemaPlayer(map.playerList[i]);\n\n    if (me.trytohit(player)) {\n      let dmg = me.lv + 5; //todo : 이거 옮기기\n\n      map.damage(player, dmg);\n\n      if (player.dead() && killedPlayerid != player.id) {\n        killedPlayerid = player.id;\n        me.xpup(50);\n      }\n    }\n  }\n\n  if (pKeys['.']) {\n    flag = (flag + 1) % 50;\n    console.log(flag);\n\n    if (flag == 0) {\n      var p = new Player('Jane Doe', 100, 100);\n      map.addPlayer(p);\n    }\n  }\n\n  if (pKeys[',']) {\n    map.addItem();\n    console.log('addItem');\n  }\n\n  if (pKeys['q'] && delflag) {\n    map.deleteAll();\n    console.log('deleteall');\n    delflag = false;\n  }\n}\n\nexport default frameUpdate;","map":{"version":3,"sources":["/Users/hong-eungi/git/tourne-sabre/frontend/src/frameUpdater.js"],"names":["Player","Item","map","ReactDOM","Textbox","ateItemid","killedPlayerid","flag","delflag","frameUpdate","me","pKeys","render","document","getElementById","dead","kill","console","log","hp","addSpeed","move","sw_rot","Math","PI","playerUpdateBack","playerUpdate","getItems","getPlayers","i","itemList","length","item","schemaItem","trytoeat","id","eaten","ate","playerList","player","schemaPlayer","trytohit","dmg","lv","damage","xpup","p","addPlayer","addItem","deleteAll"],"mappings":"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","sourcesContent":["import {Player,Item} from './object.js'\nimport {map} from './map.js'\nimport ReactDOM from 'react-dom'\nimport {Textbox} from './textbox.js'\n\nvar ateItemid = null\nvar killedPlayerid = null\nvar flag = 0\nvar delflag = true\nfunction frameUpdate(me,pKeys){\n  if(me===null){\n    ReactDOM.render(Textbox(), document.getElementById('entername'));\n    return\n  }\n  if(me.dead()){map.kill(me);me=null;console.log('death isn');return}\n  else{console.log('notdead',me.hp)}\n  if(pKeys['w'])me.addSpeed(0,-1);\n  if(pKeys['s'])me.addSpeed(0,1);\n  if(pKeys['a'])me.addSpeed(-1,0);\n  if(pKeys['d'])me.addSpeed(1,0);\n  me.move();\n  me.sw_rot(6*(Math.PI/180))\n  map.playerUpdateBack(me)\n  map.playerUpdate(me)\n  map.getItems()\n  map.getPlayers()\n\n  for(let i=0;i<map.itemList.length;i++){\n    let item = Item.schemaItem(map.itemList[i])\n    if(me.trytoeat(item)&&ateItemid != item.id){\n      ateItemid = item.id\n      item.eaten(me)\n      map.ate(item)\n    }\n  }\n\n  for(let i=0;i<map.playerList.length;i++){\n    let player = Player.schemaPlayer(map.playerList[i])\n    if(me.trytohit(player)){\n      let dmg = me.lv+5\n      //todo : 이거 옮기기\n      map.damage(player,dmg)\n      if(player.dead() && killedPlayerid != player.id){\n        killedPlayerid = player.id\n        me.xpup(50)\n      }\n    }\n  }\n\n  if(pKeys['.']){\n    flag = (flag+1)%50\n    console.log(flag)\n    if(flag==0){\n      var p = new Player('Jane Doe',100,100)\n      map.addPlayer(p)\n    }\n  }\n  if(pKeys[',']){\n    map.addItem()\n    console.log('addItem')\n  }\n  if(pKeys['q'] && delflag){\n    map.deleteAll()\n    console.log('deleteall')\n    delflag = false\n  }\n}\nexport default frameUpdate"]},"metadata":{},"sourceType":"module"}