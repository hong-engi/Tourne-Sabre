{"ast":null,"code":"import sword from './sword.png';\nimport { mapdef } from './map.js';\nimport { Pos, Player, Item } from './object.js';\nconst canvas_size = 1200;\nconst center_h = canvas_size / 2;\nconst center_w = canvas_size / 2;\nvar img = new Image();\nimg.src = sword; //todo : canvas.width,canvas.height??\n\nfunction draw(ctx, player) {\n  ctx.StrokeStyle = 'black';\n  ctx.fillStyle = 'black';\n  ctx.fillRect(0, 0, canvas_size, canvas_size);\n  defaultMap(ctx);\n\n  for (let i = 0; i < map.itemList.length; i++) {\n    let item = Item.schemaItem(map.itemList[i]);\n    if (Pos.dist(item.pos, player.pos) < 400 - item.r) drawItem(ctx, player, map.item);\n  }\n\n  for (let i = 0; i < map.playerList.length; i++) {\n    let player2 = Player.schemaplayer(map.playerList[i]);\n    if (Pos.dist(player.pos, player2.pos) < 400 - player2.r) drawPlayer(ctx, player, map.player2);\n  }\n}\n\nfunction defaultMap(ctx) {\n  var circle = new Path2D();\n  circle.arc(center_h, center_w, 400, 0, 2 * Math.PI);\n  ctx.fillStyle = 'white';\n  ctx.strokeStyle = 'gray';\n  ctx.lineWidth = 5;\n  ctx.fill(circle);\n  ctx.stroke(circle);\n}\n\nfunction drawItem(ctx, me, i) {\n  var circle = new Path2D();\n  let dpos = i.pos.addv(me.pos, -1),\n      x = center_w + dpos.x,\n      y = center_h + dpos.y;\n  circle.arc(x, y, i.r, 0, 2 * Math.PI);\n  ctx.fillStyle = i.color;\n  ctx.strokeStyle = 'black';\n  ctx.lineWidth = 0.5;\n  ctx.fill(circle);\n  ctx.stroke(circle);\n}\n\nfunction drawPlayer(ctx, me, p) {\n  var circle = new Path2D();\n  let dpos = p.pos.addv(me.pos, -1),\n      x = center_w + dpos.x,\n      y = center_h + dpos.y;\n  circle.arc(x, y, p.r, 0, 2 * Math.PI);\n  ctx.fillStyle = p.color;\n  if (me === p) ctx.fillStyle = 'red';\n  ctx.strokeStyle = 'black';\n  ctx.lineWidth = 1;\n  ctx.fill(circle);\n  ctx.stroke(circle);\n  drawSword(ctx, me, p);\n  drawString(ctx, me, p, center_h, center_w);\n}\n\nfunction drawSword(ctx, me, p) {\n  const angle = -p.sw_angle;\n  let dpos = p.pos.addv(me.pos, -1),\n      x = center_w + dpos.x,\n      y = center_h + dpos.y;\n  const r = p.sw_r,\n        w = p.sw_w,\n        h = p.sw_h;\n  ctx.save();\n  ctx.translate(x, y);\n  ctx.rotate(angle);\n  ctx.drawImage(img, -w / 2, -r - h / 2, w, h);\n  ctx.restore();\n}\n\nfunction drawString(ctx, me, p) {\n  let dpos = p.pos.addv(me.pos, -1),\n      x = center_w + dpos.x,\n      y = center_h + dpos.y;\n  ctx.fillStyle = 'black';\n  if (me === p) ctx.fillStyle = 'white';\n  ctx.font = '15px Dosis-Bold';\n  let text = p.name;\n  let width = ctx.measureText(text).width;\n  ctx.fillText(text, x - width / 2, y + 5);\n}\n\nexport default draw;","map":{"version":3,"sources":["/Users/hong-eungi/git/tourne-sabre/frontend/src/mapdraw.js"],"names":["sword","mapdef","Pos","Player","Item","canvas_size","center_h","center_w","img","Image","src","draw","ctx","player","StrokeStyle","fillStyle","fillRect","defaultMap","i","map","itemList","length","item","schemaItem","dist","pos","r","drawItem","playerList","player2","schemaplayer","drawPlayer","circle","Path2D","arc","Math","PI","strokeStyle","lineWidth","fill","stroke","me","dpos","addv","x","y","color","p","drawSword","drawString","angle","sw_angle","sw_r","w","sw_w","h","sw_h","save","translate","rotate","drawImage","restore","font","text","name","width","measureText","fillText"],"mappings":"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","sourcesContent":["import sword from './sword.png'\nimport {mapdef} from './map.js'\nimport {Pos, Player, Item} from './object.js'\nconst canvas_size = 1200;\nconst center_h = canvas_size/2;\nconst center_w = canvas_size/2;\n\nvar img = new Image();\nimg.src = sword; \n\n//todo : canvas.width,canvas.height??\nfunction draw(ctx,player) {\n    ctx.StrokeStyle='black'\n    ctx.fillStyle='black'\n    ctx.fillRect(0,0,canvas_size,canvas_size);\n    defaultMap(ctx)\n\n    for(let i=0;i<map.itemList.length;i++){\n        let item = Item.schemaItem(map.itemList[i])\n        if(Pos.dist(item.pos,player.pos)<400-item.r)\n            drawItem(ctx,player,map.item)\n    }\n\n    for(let i=0;i<map.playerList.length;i++){\n        let player2 = Player.schemaplayer(map.playerList[i])\n        if(Pos.dist(player.pos,player2.pos)<400-player2.r)\n            drawPlayer(ctx,player,map.player2)\n    }\n}\n\nfunction defaultMap(ctx){\n    var circle = new Path2D();\n    circle.arc(center_h, center_w, 400, 0, 2 * Math.PI);\n    ctx.fillStyle='white';\n    ctx.strokeStyle='gray';\n    ctx.lineWidth=5;\n    ctx.fill(circle);\n    ctx.stroke(circle);\n}\n\nfunction drawItem(ctx,me,i){\n    var circle = new Path2D();\n    let dpos = i.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    circle.arc(x, y, i.r, 0, 2 * Math.PI);\n    ctx.fillStyle=i.color;\n    ctx.strokeStyle='black';\n    ctx.lineWidth=0.5;\n    ctx.fill(circle);\n    ctx.stroke(circle);\n}\n\nfunction drawPlayer(ctx,me,p){\n    var circle = new Path2D();\n    let dpos = p.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    circle.arc(x, y, p.r, 0, 2 * Math.PI);\n    ctx.fillStyle=p.color;\n    if(me === p)ctx.fillStyle='red';\n    ctx.strokeStyle='black';\n    ctx.lineWidth=1;\n    ctx.fill(circle);\n    ctx.stroke(circle);\n    drawSword(ctx,me,p)\n    drawString(ctx,me,p,center_h,center_w)\n}\n\nfunction drawSword(ctx,me,p){\n    const angle = -p.sw_angle;\n    let dpos = p.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    const r = p.sw_r,w=p.sw_w,h=p.sw_h;\n    ctx.save();\n    ctx.translate(x,y);\n    ctx.rotate(angle);\n    ctx.drawImage(img,-w/2,-r-h/2,w,h);\n    ctx.restore();\n}\n\nfunction drawString(ctx,me,p){\n    let dpos = p.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    ctx.fillStyle='black';\n    if(me === p)ctx.fillStyle='white';\n    ctx.font = '15px Dosis-Bold';\n    let text = p.name\n    let width = ctx.measureText(text).width;\n    ctx.fillText(text,x-(width/2),y+5)\n}\n\nexport default draw;"]},"metadata":{},"sourceType":"module"}