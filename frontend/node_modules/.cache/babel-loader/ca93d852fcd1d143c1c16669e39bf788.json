{"ast":null,"code":"import sword from './sword.png';\nimport { map } from './map.js';\nimport { Pos, Player, Item } from './object.js';\nconst canvas_size = 1200;\nconst center_h = canvas_size / 2;\nconst center_w = canvas_size / 2;\nvar img = new Image();\nimg.src = sword; //todo : canvas.width,canvas.height??\n\nfunction draw(ctx, player) {\n  ctx.fillStyle = 'white';\n  ctx.fillRect(0, 0, canvas_size, canvas_size);\n  defaultMap(ctx);\n\n  for (let i = 0; i < map.itemList.length; i++) {\n    let item = Item.schemaItem(map.itemList[i]);\n\n    if (player.pos.dist(item.pos) < 550) {\n      drawItem(ctx, player, item);\n\n      if (player.trytoeat(item)) {\n        item.eaten(player);\n      }\n    }\n  }\n\n  for (let i = 0; i < map.playerList.length; i++) {\n    let player2 = Player.schemaPlayer(map.playerList[i]);\n\n    if (player.pos.dist(player2.pos) < 550) {\n      drawPlayer(ctx, player, player2);\n    }\n  } //drawing a hole\n\n\n  ctx.StrokeStyle = 'black';\n  ctx.fillStyle = 'black';\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(canvas_size, 0);\n  ctx.lineTo(canvas_size, canvas_size);\n  ctx.lineTo(0, canvas_size);\n  ctx.lineTo(0, 0);\n  ctx.closePath();\n  ctx.arc(center_w, center_h, 400, 0, Math.PI * 2, true);\n  ctx.closePath();\n  ctx.fill();\n}\n\nfunction defaultMap(ctx) {\n  var circle = new Path2D();\n  circle.arc(center_h, center_w, 400, 0, 2 * Math.PI);\n  ctx.fillStyle = 'white';\n  ctx.strokeStyle = 'gray';\n  ctx.lineWidth = 5;\n  ctx.fill(circle);\n  ctx.stroke(circle);\n}\n\nfunction drawItem(ctx, me, i) {\n  var circle = new Path2D();\n  let dpos = i.pos.addv(me.pos, -1),\n      x = center_w + dpos.x,\n      y = center_h + dpos.y;\n  circle.arc(x, y, i.r, 0, 2 * Math.PI);\n  ctx.fillStyle = i.color;\n  ctx.strokeStyle = 'black';\n  ctx.lineWidth = 0.5;\n  ctx.fill(circle);\n  ctx.stroke(circle);\n}\n\nfunction drawPlayer(ctx, me, p) {\n  var circle = new Path2D();\n  let dpos = p.pos.addv(me.pos, -1),\n      x = center_w + dpos.x,\n      y = center_h + dpos.y;\n\n  if (me.id == p.id) {\n    x = center_w;\n    y = center_h;\n  }\n\n  circle.arc(x, y, p.r, 0, 2 * Math.PI);\n  ctx.fillStyle = p.color;\n  if (me.id == p.id) ctx.fillStyle = 'red';\n  ctx.strokeStyle = 'black';\n  ctx.lineWidth = 1;\n  ctx.fill(circle);\n  ctx.stroke(circle);\n  drawSword(ctx, me, p);\n  drawString(ctx, me, p, center_h, center_w);\n}\n\nfunction drawSword(ctx, me, p) {\n  const angle = -p.sw_angle;\n  let dpos = p.pos.addv(me.pos, -1),\n      x = center_w + dpos.x,\n      y = center_h + dpos.y;\n\n  if (me.id == p.id) {\n    x = center_w;\n    y = center_h;\n  }\n\n  const r = p.sw_r,\n        w = p.sw_w,\n        h = p.sw_h;\n  ctx.save();\n  ctx.translate(x, y);\n  ctx.rotate(angle);\n  ctx.drawImage(img, -w / 2, -r - h / 2, w, h);\n  ctx.restore();\n}\n\nfunction drawString(ctx, me, p) {\n  let dpos = p.pos.addv(me.pos, -1),\n      x = center_w + dpos.x,\n      y = center_h + dpos.y;\n\n  if (me.id == p.id) {\n    x = center_w;\n    y = center_h;\n  }\n\n  ctx.fillStyle = 'black';\n  if (me.id == p.id) ctx.fillStyle = 'white';\n  ctx.font = '15px Dosis-Bold';\n  let text = p.name;\n  let width = ctx.measureText(text).width;\n  ctx.fillText(text, x - width / 2, y + 5);\n}\n\nexport default draw;","map":{"version":3,"sources":["/Users/hong-eungi/git/tourne-sabre/frontend/src/mapdraw.js"],"names":["sword","map","Pos","Player","Item","canvas_size","center_h","center_w","img","Image","src","draw","ctx","player","fillStyle","fillRect","defaultMap","i","itemList","length","item","schemaItem","pos","dist","drawItem","trytoeat","eaten","playerList","player2","schemaPlayer","drawPlayer","StrokeStyle","beginPath","moveTo","lineTo","closePath","arc","Math","PI","fill","circle","Path2D","strokeStyle","lineWidth","stroke","me","dpos","addv","x","y","r","color","p","id","drawSword","drawString","angle","sw_angle","sw_r","w","sw_w","h","sw_h","save","translate","rotate","drawImage","restore","font","text","name","width","measureText","fillText"],"mappings":"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","sourcesContent":["import sword from './sword.png'\nimport {map} from './map.js'\nimport {Pos, Player, Item} from './object.js'\nconst canvas_size = 1200;\nconst center_h = canvas_size/2;\nconst center_w = canvas_size/2;\n\nvar img = new Image();\nimg.src = sword; \n\n//todo : canvas.width,canvas.height??\nfunction draw(ctx,player) {\n\n    ctx.fillStyle='white'\n    ctx.fillRect(0,0,canvas_size,canvas_size);\n    defaultMap(ctx)\n\n    for(let i=0;i<map.itemList.length;i++){\n        let item = Item.schemaItem(map.itemList[i])\n        if(player.pos.dist(item.pos)<550){\n            drawItem(ctx,player,item)\n            if(player.trytoeat(item)){\n                item.eaten(player)\n                \n            }\n        }\n    }\n\n    for(let i=0;i<map.playerList.length;i++){\n        let player2 = Player.schemaPlayer(map.playerList[i])\n        if(player.pos.dist(player2.pos)<550){\n            drawPlayer(ctx,player,player2)\n        }\n    }\n\n    //drawing a hole\n    ctx.StrokeStyle='black'\n    ctx.fillStyle='black'\n    ctx.beginPath()\n    ctx.moveTo(0, 0);\n    ctx.lineTo(canvas_size, 0);\n    ctx.lineTo(canvas_size,canvas_size);\n    ctx.lineTo(0, canvas_size);\n    ctx.lineTo(0,0);\n    ctx.closePath();\n    ctx.arc(center_w,center_h,400,0,Math.PI*2,true);\n    ctx.closePath();\n    ctx.fill();\n}\n\nfunction defaultMap(ctx){\n    var circle = new Path2D();\n    circle.arc(center_h, center_w, 400, 0, 2 * Math.PI);\n    ctx.fillStyle='white';\n    ctx.strokeStyle='gray';\n    ctx.lineWidth=5;\n    ctx.fill(circle);\n    ctx.stroke(circle);\n}\n\nfunction drawItem(ctx,me,i){\n    var circle = new Path2D();\n    let dpos = i.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    circle.arc(x, y, i.r, 0, 2 * Math.PI);\n    ctx.fillStyle=i.color;\n    ctx.strokeStyle='black';\n    ctx.lineWidth=0.5;\n    ctx.fill(circle);\n    ctx.stroke(circle);\n}\n\nfunction drawPlayer(ctx,me,p){\n    var circle = new Path2D();\n    let dpos = p.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    if(me.id == p.id){x=center_w;y=center_h;}\n    circle.arc(x, y, p.r, 0, 2 * Math.PI);\n    ctx.fillStyle=p.color;\n    if(me.id == p.id)ctx.fillStyle='red';\n    ctx.strokeStyle='black';\n    ctx.lineWidth=1;\n    ctx.fill(circle);\n    ctx.stroke(circle);\n    drawSword(ctx,me,p)\n    drawString(ctx,me,p,center_h,center_w)\n}\n\nfunction drawSword(ctx,me,p){\n    const angle = -p.sw_angle;\n    let dpos = p.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    if(me.id == p.id){x=center_w;y=center_h;}\n    const r = p.sw_r,w=p.sw_w,h=p.sw_h;\n    ctx.save();\n    ctx.translate(x,y);\n    ctx.rotate(angle);\n    ctx.drawImage(img,-w/2,-r-h/2,w,h);\n    ctx.restore();\n}\n\nfunction drawString(ctx,me,p){\n    let dpos = p.pos.addv(me.pos,-1), x=center_w+dpos.x, y=center_h+dpos.y;\n    if(me.id == p.id){x=center_w;y=center_h;}\n    ctx.fillStyle='black';\n    if(me.id == p.id)ctx.fillStyle='white';\n    ctx.font = '15px Dosis-Bold';\n    let text = p.name\n    let width = ctx.measureText(text).width;\n    ctx.fillText(text,x-(width/2),y+5)\n}\n\nexport default draw;"]},"metadata":{},"sourceType":"module"}